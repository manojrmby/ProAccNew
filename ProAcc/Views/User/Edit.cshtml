@model ProACC_DB.UserMaster

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/shared/_Layout.cshtml";
}

    <style>
        .required::after {
            content: "*";
            font-weight: bold;
            color: red;
        }

        span {
            color: red;
            font-size: 14px;
        }
    </style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <a class="card-title">User Updation</a>
    <hr/>
    <div style="padding:1em;" class="col-lg-12">
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-6 ">

                @Html.HiddenFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control",@id="UserId" } })
                @Html.HiddenFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.Cre_on, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.Cre_By, new { htmlAttributes = new { @class = "form-control" } })
                
                <div class="position-relative form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-5 " })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @id="userMasterName",@class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                    <div>
                        &nbsp;&nbsp;&nbsp;<span id="lblName1">&nbsp;</span>
                    </div>
                </div>

                <div class="position-relative form-group">
                    @Html.LabelFor(model => model.EMail,"Email", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EMail, new { htmlAttributes = new { @class = "form-control", @id="txtUserEmail" } })
                        @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
                    </div>
                    <div>
                        &nbsp;&nbsp;&nbsp;<span id="lblUserEmail">&nbsp;</span>
                    </div>
                </div>

                <div class="position-relative form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @id = "txtMobile",@maxlength = "10" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                    <div>
                        &nbsp;&nbsp;&nbsp;<span id="lblMobile">&nbsp;</span>
                    </div>
                </div>
            </div>

            <div class="col-6 ">
                <div class="position-relative form-group">
                    @Html.LabelFor(model => model.LoginId,"Login Id", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LoginId, new { htmlAttributes = new { @class = "form-control",@id = "LoginUserID" } })
                        @Html.ValidationMessageFor(model => model.LoginId, "", new { @class = "text-danger" })
                    </div>
                    <div>
                        &nbsp;&nbsp;&nbsp;<span id="lblLoginUserID">&nbsp;</span>
                    </div>
                </div>

                <div class="position-relative form-group">
                    @Html.Label("User Type", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.DropDownList("UserTypeID", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.UserTypeID, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.UserTypeID, new { htmlAttributes = new { @class = "form-control" } })
                    </div>                     
                </div>

                <div class="position-relative form-group" id="divRole">
                    @Html.Label("Role", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.DropDownList("RoleID", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.RoleID, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="position-relative form-group" id="divCust">
                    @Html.Label("Customer", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.DropDownList("Customer_Id", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Customer_Id, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Customer_Id, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

            </div>
        </div>
            @*<div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" id="saveUser" class="btn btn-primary" />
                </div>
            </div>*@
        </div>
        <div class="row">
        <div class="col-lg-12">

            <div class="col-md-offset-2 col-md-12">
                <input type="submit" value="Save" id="saveUser" class="btn btn-primary" />
                <div class="col-lg-3" style="float:right;">
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
        }

        @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@

<script>
    $(document).ready(function () {
        var Id = $("#UserTypeID").val();
         if (Id == 1) {
            $("#divRole").hide();
            $("#divCust").hide();
        }
        else if (Id == 2)
        {
            $("#divRole").show();
            $("#divCust").hide();
        }
        else if (Id = 3) {
            $("#divRole").show();
            $("#divCust").show();
        }

        $('#LoginUserID').attr("readonly", true); 
        $('#UserTypeID').attr("readonly", true); 
        $('#RoleID').attr("readonly", true); 
        $('#Customer_Id').attr("readonly", true); 
       

    $("#UserTypeID").change(function () {
        var Id = $(this).val();
        if (Id == 1) {
            $("#divRole").hide();
            $("#divCust").hide();
        }
        else if (Id == 2)
        {
            $("#divRole").show();
            $("#divCust").hide();
        }
        else if (Id = 3) {
            $("#divRole").show();
            $("#divCust").show();
        }
    });

        $("#userMasterName").keypress(function(event){
            var inputValue = event.which;
            // allow letters and whitespaces only.
            if (!(inputValue >= 65 && inputValue <= 122) && (inputValue != 32 && inputValue != 0)) {
                    event.preventDefault();
                $("#lblName1").html("Not Allowed").show().fadeOut(3000);
            }
            ValidateUser();
         });

        $('#userMasterName').on('focusout', function () {
            
            var userMasterName = $("#userMasterName").val().trim();
            var id = $("#UserId").val().trim();
            if (userMasterName == "") {
                $("#lblName1").html("Please Enter valid Name").show();
                ValidateUser();
            }
            else {
                $.ajax({
                url: '@Url.Action("NameAvailability", "User")',
                type: "GET",
                data: { namedata: userMasterName,id:id },
                dataType: "json",
                success: function (data) {
                    if (data != "success") {
                        $("#lblName1").html("This Name is already taken,please Try another").show();
                        ValidateUser();
                    }
                    else {
                        $("#lblName1").html("");
                        ValidateUser();
                    }

                },
                error: function (err) {

                    alert(err);
                }
            });
            }

         });
    });

    $('#LoginUserID').on('focusout', function () {
        
        var LoginName = $("#LoginUserID").val().trim();
         var id = $("#UserId").val().trim();
        if (LoginName == "") {
            $("#lblLoginUserID").html("Please Enter valid LoginId").show();
            ValidateUser();
            }
            else {
                $.ajax({
                url: '@Url.Action("UsernameAvailability", "User")',
                type: "GET",
                data: { userdata: LoginName,id:id },
                dataType: "json",
                success: function (data) {
                    if (data != "success") {
                        $("#lblLoginUserID").html("This LoginId is already in use").show();
                        ValidateUser();
                    }
                    else {
                        $("#lblLoginUserID").html("");
                        ValidateUser();
                    }

                },
                error: function (err) {

                    alert(err);
                }
            });
            }

    });

     $("#txtMobile").keypress(function (e) {
            //if the letter is not digit then display error and don't type anything
         if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
              event.preventDefault();
             //display error message
             $("#lblMobile").html("Numbers Only").show();
             ValidateUser()
         }
         else {
              $("#lblMobile").html("").hide();
             ValidateUser()
         }
         ValidateUser()
     });

    $("#txtMobile").blur(function () {
            
            phone = $(this).val();
            phone = phone.replace(/[^0-9]/g,'');
            if (phone.length != 10) {
                $("#lblMobile").html("Phone number must be 10 digits").show().fadeOut(2000);
                 ValidateUser();
            }
            else {
                $("#lblMobile").html("").hide();
                 ValidateUser();
            }
            ValidateUser();
       });

    $("#txtUserEmail").on("blur", function (event) {
           
           var str = $(this).val();
           var filter = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;

        if (!filter.test(str)) {
            $("#lblUserEmail").html("Email is not valid").show();
            ValidateUser();
        }
        else {
            $("#lblUserEmail").html("").hide();
            ValidateUser();
        }
        
    });   

    function ValidateUser() {
        
        var id = $("#UserId").val().trim();
        var userMasterName = $("#userMasterName").val().trim();
        var Mobile = $("#txtMobile").val().trim();
        var Email = $("#txtUserEmail").val().trim();
        var LoginName = $("#LoginUserID").val().trim();

        var lblName = $("#lblName1").text().trim();
        var lblMobile = $("#lblMobile").text().trim();
        var lblEmail = $("#lblUserEmail").text().trim();
        var lblLoginName = $("#lblLoginUserID").text().trim();

        if (userMasterName != "" && Mobile != "" && Email != "" && LoginName != "" && lblName == "" && lblMobile == "" && lblEmail =="" && lblLoginName == "") {
            $("#saveUser").prop("disabled", false);
        }
        else {
            $("#saveUser").prop("disabled", true);
        }
    }

    $(function () {
        var msg = '@ViewBag.Message';
        if (msg == 'True')
        {
        alert("Enter the Details");
        }
    });
</script>
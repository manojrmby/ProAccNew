@model ProACC_DB.Consultant

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/shared/_Layout.cshtml";
}

<style>
    .required::after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <a class="card-title">Update Consultant</a>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, "User Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @id = "Username", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @id = "pswd" } })

    @*<div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @id = "pswd", @class = "form-control", @type = "password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.UserTypeID, "User Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("UserTypeID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserTypeID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="position-relative form-group" id="divTeam">
        @Html.LabelFor(model => model.TeamMaster, "Team", htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.DropDownList("TeamID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TeamMaster, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @id = "txtName", @class = "form-control", @onchange = "ValidateName()" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            <span id="lblName" style="color:red"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @id = "txtDesignation", @class = "form-control", @onchange = "ValidateDesignation()" } })
            @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
            <span id="lblDesignation" style="color:red"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @id = "txtMobId", @class = "form-control", @onchange = "ValidateMobileNumber()" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger", @type = "number" })
            <span id="lblMob" style="color:red"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EMail, "Email", htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EMail, new { htmlAttributes = new { @id = "txtEmail", @class = "form-control", @onchange = "ValidateEmail()" } })
            @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
            <span id="lblEmail" style="color:red"></span>
        </div>
    </div>

    @Html.EditorFor(model => model.Cre_on, new { htmlAttributes = new { @id = "conslntCre_on", @class = "form-control" } })

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="savecnslnt" value="Save" class="btn btn-secondary" onclick="SaveConsultant();" />
        </div>
    </div>
    <div class="col-lg-5" style="float:right;">
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $(document).ready(function () {
        var ID = $("#UserTypeID").val();
         if (ID == 2) {
            $("#divTeam").show()
        } else { $("#divTeam").hide() }
    });
     $("#UserTypeID").change(function () {
        var Id = $(this).val();
        //debugger;
        if (Id == 2) {
            $("#divTeam").show()
        } else { $("#divTeam").hide() }
    });
    $("#Username").prop("readonly", true);
    $("#pswd").prop("readonly", true);
    $('#conslntCre_on').hide();
    $('#pswd').hide();

    

    var result = "Success";

    function ValidateName() {
        //debugger;
        var name = document.getElementById("txtName").value;
        var lblName = document.getElementById("lblName");
        lblName.innerHTML = "";
        var letters = /^[A-Za-z, ]+$/;
        if (!letters.test(name)) {
            lblName.innerHTML = "Please enter valid Name";
            result = "error";
        }
        else {
            result = "Success";
        }
        validateSave();
    }

    function ValidateDesignation() {
        //debugger;
        var Designation = document.getElementById("txtDesignation").value;
        var lblDesignation = document.getElementById("lblDesignation");
        lblDesignation.innerHTML = "";
        var letters = /^[A-Za-z, ]+$/;
        if (!letters.test(Designation)) {
            lblDesignation.innerHTML = "Please enter a valid Designation";
            result = "error";
        }
        else {
            result = "Success";
        }
        validateSave();
    }

    function ValidateEmail() {
        //debugger;
        var email = document.getElementById("txtEmail").value;
        var lblEmail = document.getElementById("lblEmail");
        lblEmail.innerHTML = "";
        var expr = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        if (!expr.test(email)) {
            lblEmail.innerHTML = "Please enter valid email address.";
            result = "error";
        }
        else {
            result = "Success";
        }
        validateSave();
    }

    function ValidateMobileNumber() {
        var mob = /^[1-9]{1}[0-9]{9}$/;
        var txtMobile = document.getElementById("txtMobId").value;
        lblMob.innerHTML = "";
        if (mob.test(txtMobile) == false) {
            lblMob.innerHTML = "Please enter valid mobile number.";
            result = "error";
        }
        else {
            result = "Success";
        }
        validateSave();
    }

    function validateSave() {
        if (result == "error") {
            $("#savecnslnt").prop("disabled", true);
        }
        else {
            $("#savecnslnt").prop("disabled", false);
        }
    }

    function SaveConsultant() {

       // debugger;
        //alert("HI");
        var Name = $("#txtName").val();
        var Designation = $("#txtDesignation").val();
        var MobId = $("#txtMobId").val();
        var Email = $("#txtEmail").val();
       
        var lblName = $("#lblName").text(); 
        var lblDesignation = $("#lblDesignation").text();
        var lblMob = $("#lblMob").text();
        var lblEmail = $("#lblEmail").text();       
       

        if (Name.length > 0 && Designation.length > 0 && MobId.length > 0 && Email.length > 0 &&
            lblName == "" && lblDesignation == "" && lblMob == "" && lblEmail == "") {
            $("#savecnslnt").prop("disabled", false);
        }
        else {
            $("#savecnslnt").prop("disabled", true);
        }
    }
</script>
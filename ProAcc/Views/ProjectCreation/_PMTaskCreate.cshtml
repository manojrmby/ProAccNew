@{
    ViewBag.Title = "Create PM Task";
}


<a class="card-title" id="prjtCreate">PM Task Creation</a>
<a class="card-title" id="prjtUpdate" style="display:none">Update PM Task</a>

<hr />
<div style="padding: 1em;max-width: 99.5%;" id="PM-Create">
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label class="control-label col-md-4 required">Task Category</label>

                <div class="col-md-10">
                    <select class="form-control" id="drpTaskCat">
                        <option value="0">Select Category</option>
                        @foreach (var item in ViewBag.TaskCat)
                        {
                            <option value="@item.ID">@item.Name</option>
                        }
                    </select>
                </div>
                <div>
                    &nbsp;&nbsp;&nbsp;<span class="Class_span" id="lblTaskCat">&nbsp;</span>
                </div>
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label class="control-label col-md-4 required">EST Hours HH:MM</label>
                <div class="col-md-10">
                    <input type="text" class="form-control" id="txtEsthrs" placeholder="00:00"/>
                </div>
                <div>
                    &nbsp;&nbsp;&nbsp;<span class="Class_span" id="lblEsthrs">&nbsp;</span>
                </div>
            </div>
        </div>
        <div class="col-12">
            <input type="hidden" id="proj_id" />
            <input type="hidden" id="projcre_on" />
            <input type="hidden" id="projcre_By" />

            <div class="form-group">
                <label class="control-label col-md-4 required">Task Name</label>
                <div class="col-md-10">
                    <input type="text" class="form-control" id="txtTaskName" maxlength="1000" />
                </div>
                <div>
                    &nbsp;&nbsp;&nbsp;<span class="Class_span" id="lblTaskName">&nbsp;</span>
                </div>
            </div>

           
        </div>
        <div class="col-12">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" value="Create" class="btn btn-primary" id="btnCreate" />
                    <input type="button" value="Update" class="btn btn-info" id="btnUpdate" style="display:none" />
                    <a class="btn btn-success" id="btnAddNew" style="display:none"><i class="fa fa-plus"></i>New PM Task</a>
                </div>
            </div>
        </div>
    </div>
</div>
<script>

    $(document).ready(function () {

        $("#txtTaskName").keypress(function (event) {
            if (event.which === 44) {
                event.preventDefault();
                $("#lblTaskName").html("Not Allowed").show();
            }
        });

        //$("#txtTaskName").bind('paste', function () {
        //    var self = $(this);
        //    var orig = self.val();
        //    setTimeout(function () {

        //    });
        //});

    });


    function PMTaskCheck(TaskName,id) {
        // var TaskName = $("#txtTaskName").val().trim();
        //var id = $("#proj_id").val();
        var status = true
        $.ajax({
            url: '@Url.Action("CheckPMTaskAvailability", "ProjectCreation")',
            type: "GET",
            data: { namedata: TaskName,id:id },
            dataType: "json",
            async: false,
            success: function (data) {
                if (data != "success") {
                    status= false;
                }
            },
            error: function (err) {
                 alert(err);
            }
        });
        return status;
    }

    function TaskEstHrs() {
         var status=true
        var txtEstimated = $("#txtEsthrs").val();
            //var filter =/^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/  //{IMP}
        var filter =/^([0-9]{1,2}):[0-5][0-9]$/
        if (!filter.test(txtEstimated)) {
            status= false;
        }
        return status;
    }
    $('#txtEsthrs').on('keypress', function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 58)) {
                event.preventDefault();
                $("#lblEsthrs").html("Time Only").show().fadeOut(5000);
            }

    });

    $('#txtEsthrs').keyup(function (event) {

        this.value = this.value
            .replace(/[^\d:]/g, '')             // numbers and decimals only
            .replace(/(^[\d]{2})[\d]/g, '$1')   // not more than 2 digits at the beginning
            .replace(/(\::*)\:/g, '$1')         // decimal can't exist more than once
            //.replace(/(\:[\d]{2})./g, '$1');    // not more than 4 digits after decimal
            .replace(/(\:[0-5][0-9]{1})./g, '$1');

    });

    $("#btnCreate").on("click", function () {
        var TaskName = $("#txtTaskName").val().trim();
         TaskName = TaskName.replace(",", " ");
         var TaskCat = $("#drpTaskCat").val();
        var Esthrs = $("#txtEsthrs").val().trim();
        Esthrs = Esthrs.replace(":", ".")

        if (TaskCat == 0) {
            $("#lblTaskCat").html("Please select the Task Category").show().fadeOut(5000);
        }
        else if (Esthrs == "") {
            $("#lblEsthrs").html("Please enter the Estimated hours").show().fadeOut(5000);
        }
        else if (TaskEstHrs() == false) {
              $("#lblEsthrs").html("Invalid Est hours").show().fadeOut(5000);
        }
        else if (TaskName == "") {
            $("#lblTaskName").html("Please enter the Task Name").show().fadeOut(5000);
        }
        else if (PMTaskCheck(TaskName,null) == false) {
            $("#lblTaskName").html("Task Name is already in use").show().fadeOut(5000);
        }
        else {

            $.ajax({
                    type: "POST",
                @*url: '@Url.Action("PMTaskCreate", "ProjectCreation")',*@
                url: '@Url.Action("PMTaskAddEdit", "ProjectCreation")',
                data: {
                    PMTaskName: TaskName,
                    PMTaskCategoryID: TaskCat,
                    EST_hours:Esthrs
                },
                    success: function (response) {
                        if (response == "success") {
                            Notiflix.Notify.Success('PM Task Saved successfully..!', { cssAnimationStyle: 'zoom', cssAnimationDuration: 500, });
                            loadPM();
                            Reset();
                            //$("#btnCreate").show();
                           // $("#btnCreate").prop('disabled', true);
                            $(".app-main_Scroll").animate({ scrollTop: 350 }, 1000);
                        }
                    },
                    failure: function (response) {
                       alert(response.responseText);
                    },
                error: function (response) {
                        alert(response.responseText);
                    }
            });
        }
    });

    $("#btnUpdate").on("click", function () {
       
        var id = $("#proj_id").val();
        var TaskName = $("#txtTaskName").val().trim();
        TaskName = TaskName.replace(",", " ");
        var TaskCat = $("#drpTaskCat").val();
        var cre_on = $("#projcre_on").val();
        var cre_By = $("#projcre_By").val();
        var Esthrs = $("#txtEsthrs").val().trim();
        Esthrs = Esthrs.replace(":", ".")

        var model = {
            PMTaskId: id,
            PMTaskName: TaskName,
            PMTaskCategoryID: TaskCat,
            EST_hours:Esthrs,
            Cre_on: cre_on,
            Cre_By: cre_By
        }
         if (TaskCat == 0) {
            $("#lblTaskCat").html("Please select the Task Category").show().fadeOut(5000);
        }
        else if (Esthrs == "") {
            $("#lblEsthrs").html("Please enter the Estimated hours").show().fadeOut(5000);
        }
        else if (TaskEstHrs() == false) {
              $("#lblEsthrs").html("Invalid Est hours").show().fadeOut(5000);
        }
        else if (TaskName == "") {
            $("#lblTaskName").html("Please enter the Task Name").show().fadeOut(5000);
        }
        else if (PMTaskCheck(TaskName,id) == false) {
            $("#lblTaskName").html("Task Name is already in use").show().fadeOut(5000);
        }
        else {

            $.ajax({
                    type: "POST",
                    url: '@Url.Action("PMTaskAddEdit", "ProjectCreation")',
                data: { PMTask : model},
                    //dataType: "json",
                    success: function (response) {
                        if (response == "success") {
                            Notiflix.Notify.Success('PMTask <Strong>Update </strong>successfully..!', { cssAnimationStyle: 'zoom', cssAnimationDuration: 500, });
                            loadPM();
                            Reset();

                            $("#btnAddNew").hide();
                            $("#btnUpdate").hide();
                            $("#btnCreate").show();
                            $("#prjtCreate").show();
                            $("#prjtUpdate").hide();
                            $(".app-main_Scroll").animate({ scrollTop: 350 }, 1000);
                        }
                    },
                    failure: function (response) {
                       alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
            });

        }
    });

    function Reset() {
        $("#txtTaskName").val("");
        $("#txtEsthrs").val("");
        $("#drpTaskCat").val(0);
    }

</script>
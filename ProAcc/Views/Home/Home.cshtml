
@{
    ViewBag.Title = "Home";
    Layout = "~/Views/shared/_Layout.cshtml";
    var mdetails = ViewBag.list;
    var taskdetails = ViewBag.Taskdetails;
}

<style>
    /*.cs_Closed {
        color: lightgreen;
    }

    .cs_Inprogress {
        color: cornflowerblue;
    }*/

    /*.prograss_Bar {
        height: 15px;
    }*/

    .container {
        height: 200px;
        width: 430px;
        padding: 10px;
        border: 1px solid white;
        overflow: auto;
        overflow-x: hidden;
    }
    /* noUISlider ================================== */
    .noUi-target {
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -ms-touch-action: none;
        touch-action: none;
        -ms-user-select: none;
        -moz-user-select: none;
        user-select: none;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        position: relative;
        direction: ltr;
    }

        .noUi-target * {
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -ms-touch-action: none;
            touch-action: none;
            -ms-user-select: none;
            -moz-user-select: none;
            user-select: none;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
        }

    .noUi-base {
        width: 100%;
        height: 100%;
        position: relative;
        z-index: 1;
    }

    .noUi-origin {
        position: absolute;
        right: 0;
        top: 6px;
        left: 0;
        bottom: 0;
    }

    .noUi-handle {
        position: relative;
        z-index: 1;
    }

    .noUi-stacking .noUi-handle {
        z-index: 10;
    }

    .noUi-state-tap .noUi-origin {
        -webkit-transition: left 0.25s, top 0.25s;
        transition: left 0.25s, top 0.25s;
    }

    .noUi-state-drag * {
        cursor: inherit !important;
    }

    .noUi-base {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
    }

    .noUi-horizontal {
        height: 18px;
    }

        .noUi-horizontal .noUi-handle {
            width: 34px;
            height: 28px;
            left: -17px;
            top: -6px;
        }

    .noUi-vertical {
        width: 18px;
    }

        .noUi-vertical .noUi-handle {
            width: 28px;
            height: 34px;
            left: -6px;
            top: -17px;
        }

    .noUi-background {
        background: #FAFAFA;
        box-shadow: inset 0 1px 1px #f0f0f0;
    }

    .noUi-connect {
        background: #3FB8AF;
        box-shadow: inset 0 0 3px rgba(51, 51, 51, 0.45);
        -webkit-transition: background 450ms;
        transition: background 450ms;
    }

    /*.noUi-origin {
              border-radius: 2px; }*/

    .noUi-target {
        border-radius: 4px;
        border: 1px solid #D3D3D3;
        box-shadow: inset 0 1px 1px #F0F0F0, 0 3px 6px -5px #BBB;
    }

        .noUi-target.noUi-connect {
            box-shadow: inset 0 0 3px rgba(51, 51, 51, 0.45), 0 3px 6px -5px #BBB;
        }

    .noUi-dragable {
        cursor: w-resize;
    }

    .noUi-vertical .noUi-dragable {
        cursor: n-resize;
    }

    .noUi-handle {
        border: 1px solid #D9D9D9;
        border-radius: 3px;
        background: #FFF;
        cursor: default;
        box-shadow: inset 0 0 1px #FFF, inset 0 1px 7px #EBEBEB, 0 3px 6px -3px #BBB;
    }

    .noUi-active {
        box-shadow: inset 0 0 1px #FFF, inset 0 1px 7px #DDD, 0 3px 6px -3px #BBB;
    }

    .noUi-handle:before {
        content: "";
        display: block;
        position: absolute;
        height: 14px;
        width: 1px;
        background: #E8E7E6;
        left: 14px;
        top: 6px;
    }

    .noUi-handle:after {
        content: "";
        display: block;
        position: absolute;
        height: 14px;
        width: 1px;
        background: #E8E7E6;
        left: 14px;
        top: 6px;
        left: 17px;
    }

    .noUi-vertical .noUi-handle:before {
        width: 14px;
        height: 1px;
        left: 6px;
        top: 14px;
    }

    .noUi-vertical .noUi-handle:after {
        width: 14px;
        height: 1px;
        left: 6px;
        top: 14px;
        top: 17px;
    }

    [disabled].noUi-connect, [disabled] .noUi-connect {
        background: #B8B8B8;
    }

    [disabled].noUi-origin, [disabled] .noUi-handle {
        cursor: not-allowed;
    }

    .noUi-target {
        box-shadow: none;
        border: none;
    }

    .noUi-base {
        height: 15px;
        top: -6px;
    }

    .noUi-background {
        height: 6px;
        top: 6px;
        background-color: #FFFfff; /* #bfbfbf;*/
        box-shadow: none;
    }

    .noUi-background1 {
        height: 6px;
        top: 6px;
        background-color: red; /* #bfbfbf;*/
        box-shadow: none;
    }

    .noUi-horizontal {
        height: 3px;
    }

    .noUi-connect {
        height: 6px;
        top: 6px;
        background-color: #46a626; /* #26A69A;*/
        box-shadow: none;
    }

    .noUi-horizontal .noUi-handle {
        width: 25px;
        height: 25px;
        border-radius: 50%;
        box-shadow: none;
        background-color: #000000; /*#26A69A*/
        border: none;
        /*left: -5px;*/
        top: -10px;
        transition: width 0.2s cubic-bezier(0.215, 0.61, 0.355, 1), height 0.2s cubic-bezier(0.215, 0.61, 0.355, 1), left 0.2s cubic-bezier(0.215, 0.61, 0.355, 1), top 0.2s cubic-bezier(0.215, 0.61, 0.355, 1);
    }

    .noUi-handle:before, .noUi-handle:after {
        content: none;
    }

    .noUi-target .noUi-active.noUi-handle {
        -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
        -moz-box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
        -ms-box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
    }

    .noUi-target .range-label {
        position: absolute;
        height: 30px;
        width: 30px;
        top: -17px;
        left: -2px;
        background-color: #26A69A;
        border-radius: 50%;
        transition: border-radius 0.25s cubic-bezier(0.215, 0.61, 0.355, 1), transform 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
        transform: scale(0.5) rotate(-45deg);
        transform-origin: 50% 100%;
    }

    .noUi-target .noUi-active .range-label {
        border-radius: 15px 15px 15px 0;
        transform: rotate(-45deg) translate(23px, -25px);
    }

    .range-label span {
        width: 100%;
        text-align: center;
        color: #fff;
        font-size: 12px;
        transform: rotate(45deg);
        opacity: 0;
        position: absolute;
        top: 7px;
        left: -1px;
        transition: opacity 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
    }

    .noUi-active .range-label span {
        opacity: 1;
    }

    /*.bg-grow-before {
        background-color: darkcyan;
    }*/
</style>

@Scripts.Render("~/bundles/Scripts/ChartJS")
@*<script src="~/Asset/Scripts/Chart.js"></script>
    <script src="~/Asset/Scripts/Chart.RadialGauge.umd.js"></script>*@
@*<script src="~/Asset/Scripts/Prograssbarjs.js"></script>*@
@*<script src="~/Asset/Scripts/chartjs-plugin-labels.min.js"></script>*@

<style>
    .ShadowClass{
        background:
	linear-gradient(white 30%, hsla(0,0%,100%, 0)),
	linear-gradient(hsla(0,0%,100%,0) 10px, white 70%) bottom,
	radial-gradient(at top, rgba(0,0,0,0.2), transparent 70%), 
	radial-gradient(at bottom, rgba(0,0,0,0.2), transparent 70%) bottom;
background-repeat:no-repeat;
background-size: 100% 20px, 100% 20px, 100% 10px, 100% 10px;
background-attachment:local, local, scroll, scroll;
    }
</style>
<style>
    #scrollContainer {
    height : 190px;
    overflow : hidden;
}

 ._Scroll{
    margin-bottom : 8px;
  
}

._Scroll dimmed {
    opacity : 0.5;
}
._Scroll highlighted {
    opacity : 1;
    background-color : #CCDDFF;
}

.bg-grow-be
{
    background-image: linear-gradient( #AA076B,#61045f) !important;
}
</style>

<a class="card-title">Dashboard</a>
<div style="padding: 1em;" >
    <div class="row" >

        <div class="col-lg-12 card" style="margin-bottom:20px !important;">
            <div class="row">
                @if (User.IsInRole("Consultant") || User.IsInRole("Admin"))
                {
                    <div class="col-md-4">
                        <div class="position-relative form-group">
                            <label for="exampleEmail" class="">Customer Name</label>
                            @Html.DropDownList("Customer", (IEnumerable<SelectListItem>)ViewBag.Customer, "-Select-", new { id = "IDCustomer", @class = "form-control" })
                            @*@Html.DropDownList("Project", (IEnumerable<SelectListItem>), "- SELECT-", new { id = "IDProject", @class = "form-control" })*@
                        </div>
                    </div>
                }
                <div class="col-md-3">
                    <label class="">Project Name</label>
                    @if (User.IsInRole("Customer") || User.IsInRole("Project Manager"))
                    {
                        @Html.DropDownList("Project", (IEnumerable<SelectListItem>)ViewBag.Project, "-Select-", new { id = "IDProject", @class = "form-control" })
                    }
                    else
                    {
                        @Html.DropDownList("Project", new SelectList(Enumerable.Empty<SelectListItem>(), "IDProject", "ProjectName"),
                               "-Select-", new { id = "IDProject", @class = "form-control" })
                    }
                </div>
                <div class="col-md-2">
                    <label for="exampleEmail" class="">Instance Name</label>
                    @Html.DropDownList("Instance", new SelectList(Enumerable.Empty<SelectListItem>(), "IDInstance", "InstanceName"),
                    "-Select-", new { id = "IDInstance", @class = "form-control" })
                </div>
                <div class="col-md-3">
                    <label for="exampleEmail" class="">.</label>
                    <button class="btn-wide mb-2 mr-2 btn btn-primary form-control ld-ext-right" id="SubmitInstance" onclick="this.classList.toggle('running')">
                        Select Instance
                        <div class="ld ld-ring ld-spin"></div>
                    </button>
                </div>
            </div>
        </div>

        <div class="col-lg-12 card" style="margin-bottom:10px !important;">
            <div class="row " style="margin-top: 20px;">
                <div class="col-md-6 col-xl-4">
                    <div class="card mb-3 widget-content bg-pink" style="background-color: #E91E63 !important;">
                        <div class="widget-content-wrapper text-white">
                            <div class="widget-content-top">
                                <div class="widget-heading">Assessment</div>
                                <div class="widget-heading text-white"><span id="AssId"></span></div>
                            </div>
                            <div class="widget-content-right">

                                <div class="icon"><i class="fa fa-share-alt" aria-hidden="true"></i></div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="col-md-6 col-xl-4">
                    <div class="card mb-3 widget-content bg-midnight-bloom">
                        <div class="widget-content-wrapper text-white">
                            <div class="widget-content-left">
                                <div class="widget-heading">Readiness Check</div>
                                <div class="widget-heading text-white"><span id="Ass_StatusId">0</span></div>
                            </div>
                            <div class="widget-content-right">
                                <div class="icon"><i class="fa fa-share-alt" aria-hidden="true"></i></div>

                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="col-lg-12 card" style="margin-bottom:10px !important;">

            <div class="row" style="padding:0em 1em 3em 1em;">
                <div class="card-body">
                    <h5 class="card-title">S/4HANA System Conversion</h5>
                    <form class="">
                        @if (ViewBag.count != null)
                        {
                            int i = ViewBag.count;
                            string progress = "noUi-origin noUi-background1";
                            string progress1 = "noUi-origin noUi-background1";
                            string progress2 = "noUi-origin noUi-background1";
                            string color = "black";
                            string color1 = "black";
                            string color2 = "black";
                            string color3 = "black";
                            if (i == 1)
                            {
                                //progress = "noUi-origin noUi-connect";
                                color = "Green";
                            }
                            else if (i == 2)
                            {
                                progress = "noUi-origin noUi-connect";
                                // progress1 = "noUi-origin noUi-connect";
                                color = "Green";
                                color1 = "Green";
                            }
                            else if (i == 3)
                            {
                                progress = "noUi-origin noUi-connect";
                                progress1 = "noUi-origin noUi-connect";
                                // progress2 = "noUi-origin noUi-connect";
                                color = "Green";
                                color1 = "Green";
                                color2 = "Green";
                            }
                            else if (i == 4)
                            {
                                progress = "noUi-origin noUi-connect";
                                progress1 = "noUi-origin noUi-connect";
                                progress2 = "noUi-origin noUi-connect";
                                color = "Green";
                                color1 = "Green";
                                color2 = "Green";
                                color3 = "Green";
                            }


                            <div id="nouislider_range_example" class="noUi-target noUi-ltr noUi-horizontal" style="margin-top: 25px;">
                                <div class="noUi-base">

                                    <div class="@progress" style="left: 20%;">
                                        <div class="noUi-handle noUi-handle-lower" style="background-color:@color">
                                            <br>
                                            <p style="width: 200px !important;margin-left: -35px;margin-top: 5px;"> &nbsp;Pre-Conversion</p>
                                        </div>
                                    </div>
                                    <div class="@progress1" style="left: 40%;">
                                        <div class="noUi-handle noUi-handle-upper" style="background-color:@color1">
                                            <br>
                                            <p style="width: 200px !important;margin-left: -35px;margin-top: 5px;"> &nbsp;Conversion</p>
                                        </div>
                                    </div>
                                    <div class="@progress2" style="left: 60%;">
                                        <div class="noUi-handle noUi-handle-upper" style="background-color:@color2">
                                            <br>
                                            <p style="width: 300px !important;margin-left: -35px;margin-top: 5px;"> &nbsp;Post Conversion</p>
                                        </div>
                                    </div>
                                    <div class="noUi-origin noUi-background" style="left: 80%;background-color: white !important;">
                                        <div class="noUi-handle noUi-handle-upper" style="background-color:@color3">
                                            <br>
                                            <p style="width: 300px !important;margin-left: -35px;margin-top: 5px;"> &nbsp;Validation</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (ViewBag.count != null)
                        {
                            int i = ViewBag.count;
                            int value = 0;
                            if (i == 1)
                            {
                                value = 10;
                            }
                            else if (i == 2)
                            {
                                value = 35;
                            }
                            else if (i == 3)
                            {
                                value = 70;
                            }
                            else if (i == 4)
                            {
                                value = 100;
                            }

                        }
                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-12 card" style="margin-bottom:10px !important;">
            <div class="row" style="margin-top: 20px;">
                <div class="col-md-6 col-xl-3">
                    <div class="card mb-3 widget-content"style="background-color: #FF9800 !important;">
                        <div class="widget-content-wrapper text-white">
                            <div class="widget-content-left">
                                <div class="widget-heading">Pre-Conversion</div>
                                <div class="widget-subheading"><span id="Pre_StatusId"></span></div>
                            </div>
                            <div class="widget-content-right">
                                <div class="widget-numbers text-white"><span id="PreId">0</span></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-xl-3">
                    <div class="card mb-3 widget-content bg-grow-be">
                        <div class="widget-content-wrapper text-white">
                            <div class="widget-content-left">
                                <div class="widget-heading">Conversion</div>
                                <div class="widget-subheading"><span id="Con_StatusId"></span></div>
                            </div>
                            <div class="widget-content-right">
                                <div class="widget-numbers text-white"><span id="ConId">46%</span></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-xl-3">
                    <div class="card mb-3 widget-content bg-arielle-smile">
                        <div class="widget-content-wrapper text-white">
                            <div class="widget-content-left">
                                <div class="widget-heading">Post-Conversion</div>
                                <div class="widget-subheading"> <span id="Post_StatusId"></span></div>
                            </div>
                            <div class="widget-content-right">
                                <div class="widget-numbers text-white"><span id="PostId"></span></div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6 col-xl-3">
                    <div class="card mb-3 widget-content bg-grow-early">
                        <div class="widget-content-wrapper text-white">
                            <div class="widget-content-left">
                                <div class="widget-heading">Validation</div>
                                <div class="widget-subheading"><span id="Vali_StatusId"></span></div>
                            </div>
                            <div class="widget-content-right">
                                <div class="widget-numbers text-white"><span id="ValiId">46%</span></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-12 card" style=" margin-bottom: 20px;min-height: 250px;">
            <div class="row">
                <table>
                    <tr>
                        <td style=" text-align: left; vertical-align: top;"><a class="card-title">Project Name :</a>@Session["Project_Name"]</td>
                        <td style="text-align:right;vertical-align:top;"><a class="card-title">Instance Name :</a> @Session["Instance_Name"]</td>
                    </tr>
                    <tr>
                        <td>
                            <div class="col-lg-10 text-center ">
                                <a class="card-title">Assessment</a>

                                <canvas id="Chart_Assessment"></canvas>
                            </div>
                        </td>
                        <td>
                            <div id="scrollContainer" class="ShadowClass">

                                <div class="card mb-3 widget-content  _Scroll" id="AssDivId">
                                    @*<div class="widget-content-outer">
                                        <div class="widget-content-wrapper">
                                            <div class="widget-content-left">
                                                <div class="widget-numbers fsize-3 text-muted" id="AssId">0%</div>
                                            </div>
                                            <div class="widget-content-right">
                                                <div class="text-muted"> Assessment</div>
                                            </div>
                                        </div>
                                        <div class="widget-progress-wrapper mt-1">
                                            <div class="progress-bar-sm progress-bar-animated-alt progress">
                                                <div class="progress-bar" role="progressbar" aria-valuenow="1" aria-valuemin="0" aria-valuemax="100" style="width:100%;" id="AssId_Progress"></div>
                                            </div>
                                        </div>
                                        <div class="widget-content-wrapper">
                                            <div class="widget-content-left">
                                                <div class="text-muted widget-heading">Readiness Check :</div>
                                            </div>
                                            <div class="widget-content-right">
                                                <div class="text-muted" id="Ass_StatusId"></div>
                                            </div>
                                        </div>

                                    </div>*@

                                </div>
                                <div class="card mb-3 widget-content _Scroll" id="PreDivId">
                                    <div class="widget-content-outer">
                                        <div class="widget-content-wrapper">
                                            <div class="widget-content-left">
                                                <div class="widget-numbers fsize-3 text-muted" id="PreId">0%</div>
                                            </div>
                                            <div class="widget-content-right">
                                                <div class="text-muted">  Pre-Conversion :</div>
                                            </div>
                                        </div>
                                        <div class="widget-progress-wrapper mt-1">
                                            <div class="progress-bar-sm progress-bar-animated-alt progress">
                                                <div class="progress-bar" role="progressbar" aria-valuenow="1" aria-valuemin="0" aria-valuemax="100" style="width:100%;" id="PreId_Progress"></div>
                                            </div>
                                        </div>
                                        <div class="widget-content-wrapper">
                                            <div class="widget-content-left">
                                                <div class="text-muted widget-heading">Pre-Conversion Status :</div>
                                            </div>
                                            <div class="widget-content-right">
                                                <div class="text-muted" id="Pre_StatusId"></div>
                                            </div>
                                        </div>

                                    </div>

                                </div>
                                <div class="card mb-3 widget-content bg-grow-before _Scroll" id="ConDivId">
                                    <div class="widget-content-outer">
                                        <div class="widget-content-wrapper">
                                            <div class="widget-content-left">
                                                <div class="widget-numbers fsize-3 text-muted" id="ConId">0%</div>
                                            </div>
                                            <div class="widget-content-right">
                                                <div class="text-muted">  Conversion :</div>
                                            </div>
                                        </div>
                                        <div class="widget-progress-wrapper mt-1">
                                            <div class="progress-bar-sm progress-bar-animated-alt progress">
                                                <div class="progress-bar" role="progressbar" aria-valuenow="1" aria-valuemin="0" aria-valuemax="100" style="width:100%;" id="ConId_Progress"></div>
                                            </div>
                                        </div>
                                        <div class="widget-content-wrapper">
                                            <div class="widget-content-left">
                                                <div class="text-muted widget-heading">Conversion Status :</div>
                                            </div>
                                            <div class="widget-content-right">
                                                <div class="text-muted" id="Con_StatusId"></div>
                                            </div>
                                        </div>

                                    </div>


                                </div>
                                <div class="card mb-3 widget-content bg-grow-before _Scroll" id="PostDivId">
                                    <div class="widget-content-outer">
                                        <div class="widget-content-wrapper">
                                            <div class="widget-content-left">
                                                <div class="widget-numbers fsize-3 text-muted" id="PostId">0%</div>
                                            </div>
                                            <div class="widget-content-right">
                                                <div class="text-muted">Post-Conversion :</div>
                                            </div>
                                        </div>
                                        <div class="widget-progress-wrapper mt-1">
                                            <div class="progress-bar-sm progress-bar-animated-alt progress">
                                                <div class="progress-bar" role="progressbar" aria-valuenow="1" aria-valuemin="0" aria-valuemax="100" style="width:100%;" id="PostId_Progress"></div>
                                            </div>
                                        </div>
                                        <div class="widget-content-wrapper">
                                            <div class="widget-content-left">
                                                <div class="text-muted widget-heading">Post-Conversion Status :</div>
                                            </div>
                                            <div class="widget-content-right">
                                                <div class="text-muted" id="Post_StatusId"></div>
                                            </div>
                                        </div>

                                    </div>

                                </div>
                                <div class="card mb-3 widget-content bg-grow-before _Scroll" id="ValiDivId">
                                    <div class="widget-content-outer">
                                        <div class="widget-content-wrapper">
                                            <div class="widget-content-left">
                                                <div class="widget-numbers fsize-3 text-muted" id="ValiId">0%</div>
                                            </div>
                                            <div class="widget-content-right">
                                                <div class="text-muted">  Validation :</div>
                                            </div>
                                        </div>
                                        <div class="widget-progress-wrapper mt-1">
                                            <div class="progress-bar-sm progress-bar-animated-alt progress">
                                                <div class="progress-bar" role="progressbar" aria-valuenow="1" aria-valuemin="0" aria-valuemax="100" style="width:100%;" id="ValiId_Progress"></div>
                                            </div>
                                        </div>
                                        <div class="widget-content-wrapper">
                                            <div class="widget-content-left">
                                                <div class="text-muted widget-heading">Validation Status :</div>
                                            </div>
                                            <div class="widget-content-right">
                                                <div class="text-muted" id="Vali_StatusId"></div>
                                            </div>
                                        </div>

                                    </div>

                                </div>
                                <div class="_Scroll align-content-center">
                                    <img src="~/Asset/images/image_2020_04_26T06_25_25_806Z.png" alt="Alternate Text" width="272px" />
                                </div>
                            </div>

                        </td>
                    </tr>
                </table>
            </div>
            <hr /> @*style="margin-top:-20px !important;"*@



        </div>

        <div class="col-lg-12 card" style="margin-bottom:20px;">
            <div class="row">

                <div class="col-lg-6 card text-center border">
                    <br />
                    <div class="card-title">Pre Conversion</div>
                    <canvas id="chart-Pre_Conversion"></canvas>
                </div>
                <div class="col-lg-6 card text-center border">
                    <br />
                    <div class="card-title">Conversion</div>
                    <canvas id="chart-Conversion"></canvas>
                    @*<label>Total:365</label>*@
                </div>

            </div>
            <br />
            <div class="row">
                <div class="col-lg-6 card text-center border">
                    <br />
                    <div class="card-title">Post Conversion</div>

                    <canvas id="chart-Post_Conversion"></canvas>
                    @*<label>Total:215</label>*@
                </div>
                <div class="col-lg-6 card text-center border">
                    <br />
                    <div class="card-title">Validation</div>
                    <canvas id="chart-Validation"></canvas>
                    @*<label>Total:215</label>*@
                </div>
            </div>

        </div>




        @*<div class="col-lg-12 card">
            <div class="row">

                <div class="col-lg-12 card">
                    <div class="card-body">
                        <h5 class="card-title">Recent Updates</h5>
                        <table class="mb-0 table table-hover">

                            <thead>
                                <tr>
                                    <th>Tasks</th>
                                    <th>Named owner of task</th>
                                    <th>PhaseName</th>
                                    <th>Status</th>
                                    <th>Deadline</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in taskdetails)
                                {
                                    <tr>
                                        <td>@item.Task</td>
                                        <td>@item.Name</td>
                                        <td>@item.PhaseName</td>
                                        <td>@item.StatusName</td>
                                        <td>@item.Planed__En_Date.ToString("dd/MM/yyyy")</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>*@




    </div>


</div>

<div>

</div>
<script>
	//This Project & Instance
    $("#chart-Assessment").click(
        function (evt) {
            window.location.href = "@Url.Action("ReadinessReport","Assessment")";
        }
    );
var blue = '#3f6ad8';
var Yellow = '#f7b924';
var Green = '#3ac47d';
    function Ajax_Donut() {

		$.ajax({
				type: "POST",
				url: '@Url.Action("GetHomeDonut")',
				//data: '{std: ' + JSON.stringify(std) + '}',
				dataType: "json",
				contentType: "application/json; charset=utf-8",
            success: function (Result) {
               //debugger;
                percentage(Result);
                Data = Result[0];
                
                data_Assessment = [Data.COMPLETE, Data.WIP, Data.ONHOLD, Data.YetToStart, Data.NA];
				 labels = ["Completed", "Work In Progress", "On Hold", "Yet To Start","Not Apllicable"];
                render_Ass_Chart(data_Assessment, labels);

                Data1=Result[1];
                data_Pre_Con = [Data1.COMPLETE, Data1.WIP, Data1.ONHOLD, Data1.YetToStart, Data1.NA];
                render_Pre_Conversion_Chart(data_Pre_Con, labels);

                 Data2=Result[2];
                data_Convertion = [Data2.COMPLETE, Data2.WIP, Data2.ONHOLD, Data2.YetToStart, Data2.NA];
                render_Conversion_Chart(data_Convertion, labels);

                 Data3=Result[3];
                data_Post_Con = [Data3.COMPLETE, Data3.WIP, Data3.ONHOLD, Data3.YetToStart, Data3.NA];
                render_Post_Conversion_Chart(data_Post_Con, labels);

                 Data4=Result[4];
                data_Validation = [Data4.COMPLETE, Data4.WIP, Data4.ONHOLD, Data4.YetToStart, Data4.NA];
                render_Validation_Chart(data_Validation, labels);
				},
				error: function () {
					alert("Error while inserting data");
				}
			});
    }

    function Render_No_Data(ID) {
        
        var ctx = document.getElementById(ID).getContext("2d");
        var config = {
			type: "doughnut",
			data: {
				labels: ["Not Yet Started"],
				datasets: [{
					data: [100],
					backgroundColor: [
							'#FF6384'
						],
					borderWidth: 2,
					label: ""
				}]
			},
			options: {
				responsive: true,
                legend: {
                    display: false
				
                },
                dataLabels: {
                    display: false
                },
                
                centerPercentage: 60,
                centerArea: {
                    displayText: true,
                    text: "Manoj"
                },

				 plugins: {
                     labels: {
                         //arc: true,
                         render: 'label',
                         fontColor: '#000',
                       fontColor: '#000'
						//position: 'outside'
					}
                },
				 tooltips: {
                    callbacks: {
                        label: function (tooltipItem, data) {
                            var dataset = data.datasets[tooltipItem.datasetIndex];
                            var total = dataset.data.reduce(function (previousValue, currentValue, currentIndex, array) {
                                return previousValue + currentValue;
                            });
                            //var currentValue = dataset.data[tooltipItem.index];
                            //var percentage = Math.floor(((currentValue / total) * 100) + 0.5);
                            //return percentage + "%";

                             var currentValue = dataset.data[tooltipItem.index];
                            var percentage = parseFloat((currentValue/total*100).toFixed(1));
                            //return currentValue + ' (' + percentage + '%)';
                            //return percentage + '%';
                            return '';

                        },
                        title: function(tooltipItem, data) {
                            return data.labels[tooltipItem[0].index];
                        }
                    }
                },

				animation: {
					duration: 5000
				}
            },
            centerText: {
                display: true,
                text: "NO Data" 
            }
		};

		window.myRadialGauge = new Chart(ctx, config);
    }


   function render_Ass_Chart(data, labels) {
		//Chart.defaults.global.defaultFontFamily = "Verdana";
       var Total = data[0] + data[1] + data[2] + data[3] + data[4];
       if (Total == 0) {
           var ID = 'Chart_Assessment';
           Render_No_Data(ID)
       }
       else {
           var ctx = document.getElementById("Chart_Assessment").getContext("2d");

       
		var config = {
			type: "doughnut",
			data: {
				labels: labels,
				datasets: [{

					data: data,
					//backgroundColor: [gradientStroke_, gradientStroke_2],
					backgroundColor: [
							'#71c989',//'#FF6384',
							'#74abe2',
							'#FFCE56',
                            '#f08956',
                            '#8c32a8'
						],
					borderWidth: 2,
					label: "Score"
				}]
			},
			options: {
                elements: {
                    center: {
                        text: "Total:"+ Total,
                        color: '#FF6384', // Default is #000000
                        fontStyle: 'Arial', // Default is Arial
                        sidePadding: 5, // Default is 20 (as a percentage)
                        minFontSize: 25, // Default is 20 (in px), set to false and text will not wrap.
                        lineHeight: 25 // Default is 25 (in px), used for when text wraps
                    }
                },
				responsive: true,
                legend: {
                    display: false,
					position: 'right',
                    labels: {
                        fontColor: "#000080",
                    }
                },

                //title: {
                //    display: true,
                //    text: "Assessment"
                //},
                centerPercentage: 60,
                centerArea: {
                    displayText: true,
                    text: "100%"
                },

				 plugins: {
					labels: {
                         render: 'value' + "%",
                        fontColor: '#000',
						position: 'outside'
					}
                },
				 tooltips: {
                    callbacks: {
                        label: function (tooltipItem, data) {
                            var dataset = data.datasets[tooltipItem.datasetIndex];
                            var total = dataset.data.reduce(function (previousValue, currentValue, currentIndex, array) {
                                return previousValue + currentValue;
                            });
                            //var currentValue = dataset.data[tooltipItem.index];
                            //var percentage = Math.floor(((currentValue / total) * 100) + 0.5);
                            //return percentage + "%";

                             var currentValue = dataset.data[tooltipItem.index];
                            var percentage = parseFloat((currentValue/total*100).toFixed(1));
                            //return currentValue + ' (' + percentage + '%)';
                            //return percentage + '%';
                            return currentValue;

                        },
                        title: function(tooltipItem, data) {
                            return data.labels[tooltipItem[0].index];
                        }
                    }
                },

				animation: {
					duration: 5000
				}
            },
            centerText: {
                display: true,
                text: "Total:" + Total
            }
		};

		window.myRadialGauge = new Chart(ctx, config);
       }
		
    }
    
   function render_Pre_Conversion_Chart(data, labels) {
        //Chart.defaults.global.defaultFontFamily = "Verdana";
       var Total = data[0] + data[1] + data[2] + data[3] + data[4];
       if (Total == 0) {
           var ID = 'chart-Pre_Conversion';
           Render_No_Data(ID)
       }
       else {
           var ctx = document.getElementById("chart-Pre_Conversion").getContext("2d");
           var textInside = Total;
           var config = {
               type: "doughnut",
               data: {
                   labels: labels,
                   datasets: [{

                       data: data,
                       //backgroundColor: [gradientStroke_, gradientStroke_2],
                       backgroundColor: [
                           '#71c989',//'#FF6384',
                           '#74abe2',
                           '#FFCE56',
                           '#f08956',
                           '#8c32a8'
                       ],
                       borderWidth: 2,
                       label: "Score"
                   }]
               },
               options: {
                   //elements: {
                   //    center: {
                   //        text: "Total:"+ Total,
                   //        color: '#FF6384', // Default is #000000
                   //        fontStyle: 'Arial', // Default is Arial
                   //        sidePadding: 5, // Default is 20 (as a percentage)
                   //        minFontSize: 25, // Default is 20 (in px), set to false and text will not wrap.
                   //        lineHeight: 25 // Default is 25 (in px), used for when text wraps
                   //    }
                   //},
                   elements: {
                       center: {
                           text: textInside
                       }
                   },

                   responsive: true,
                   legend: {
                       display: false,
                       position: 'right',
                       labels: {
                           fontColor: "#000080",
                       }
                   },

                   //title: {
                   //    display: true,
                   //    text: "Assessment"
                   //},
                   centerPercentage: 60,
                   centerArea: {
                       displayText: true,
                       text: "100%"
                   },

                   plugins: {
                       labels: {
                           render: 'value' + "%",
                           fontColor: '#000',
                           position: 'outside'
                       }
                   },
                   tooltips: {
                       callbacks: {
                           label: function (tooltipItem, data) {
                               var dataset = data.datasets[tooltipItem.datasetIndex];
                               var total = dataset.data.reduce(function (previousValue, currentValue, currentIndex, array) {
                                   return previousValue + currentValue;
                               });
                               //var currentValue = dataset.data[tooltipItem.index];
                               //var percentage = Math.floor(((currentValue / total) * 100) + 0.5);
                               //return percentage + "%";

                               var currentValue = dataset.data[tooltipItem.index];
                               var percentage = parseFloat((currentValue / total * 100).toFixed(1));
                               //return currentValue + ' (' + percentage + '%)';
                               //return percentage + '%';
                               return currentValue;

                           },
                           title: function (tooltipItem, data) {
                               return data.labels[tooltipItem[0].index];
                           }
                       }
                   },

                   animation: {
                       duration: 5000
                   }
               },
               centerText: {
                   display: true,
                   text: "Total:" + Total
               }
           };

           window.myRadialGauge = new Chart(ctx, config);
       }
    }
   function render_Conversion_Chart(data, labels) {
		//Chart.defaults.global.defaultFontFamily = "Verdana";
       var Total = data[0] + data[1] + data[2] + data[3] + data[4];
       if (Total == 0) {
           var ID = 'chart-Conversion';
           Render_No_Data(ID)
       }
       else {
           var ctx = document.getElementById("chart-Conversion").getContext("2d");


           var textInside = Total;
           var config = {
               type: "doughnut",
               data: {
                   labels: labels,
                   datasets: [{

                       data: data,
                       //backgroundColor: [gradientStroke_, gradientStroke_2],
                       backgroundColor: [
                           '#71c989',//'#FF6384',
                           '#74abe2',
                           '#FFCE56',
                           '#f08956',
                           '#8c32a8'
                       ],
                       borderWidth: 2,
                       label: "Score"
                   }]
               },
               options: {
                   //elements: {
                   //    center: {
                   //        text: "Total:"+ Total,
                   //        color: '#FF6384', // Default is #000000
                   //        fontStyle: 'Arial', // Default is Arial
                   //        sidePadding: 5, // Default is 20 (as a percentage)
                   //        minFontSize: 25, // Default is 20 (in px), set to false and text will not wrap.
                   //        lineHeight: 25 // Default is 25 (in px), used for when text wraps
                   //    }
                   //},
                   elements: {
                       center: {
                           text: textInside
                       }
                   },

                   responsive: true,
                   legend: {
                       display: false,
                       position: 'right',
                       labels: {
                           fontColor: "#000080",
                       }
                   },

                   //title: {
                   //    display: true,
                   //    text: "Assessment"
                   //},
                   centerPercentage: 60,
                   centerArea: {
                       displayText: true,
                       text: "100%"
                   },

                   plugins: {
                       labels: {
                           render: 'value' + "%",
                           fontColor: '#000',
                           position: 'outside'
                       }
                   },
                   tooltips: {
                       callbacks: {
                           label: function (tooltipItem, data) {
                               var dataset = data.datasets[tooltipItem.datasetIndex];
                               var total = dataset.data.reduce(function (previousValue, currentValue, currentIndex, array) {
                                   return previousValue + currentValue;
                               });
                               //var currentValue = dataset.data[tooltipItem.index];
                               //var percentage = Math.floor(((currentValue / total) * 100) + 0.5);
                               //return percentage + "%";

                               var currentValue = dataset.data[tooltipItem.index];
                               var percentage = parseFloat((currentValue / total * 100).toFixed(1));
                               //return currentValue + ' (' + percentage + '%)';
                               //return percentage + '%';
                               return currentValue;

                           },
                           title: function (tooltipItem, data) {
                               return data.labels[tooltipItem[0].index];
                           }
                       }
                   },

                   animation: {
                       duration: 5000
                   }
               },
               centerText: {
                   display: true,
                   text: "Total:" + Total
               }

           };

           window.myRadialGauge = new Chart(ctx, config);
       }
    }
    
     function render_Post_Conversion_Chart(data, labels) {
         //Chart.defaults.global.defaultFontFamily = "Verdana";
      var Total = data[0] + data[1] + data[2] + data[3] + data[4];
         if (Total == 0) {
             var ID = 'chart-Post_Conversion';
             Render_No_Data(ID)
         }
         else {
             var ctx = document.getElementById("chart-Post_Conversion").getContext("2d");
             var textInside = Total;
             var config = {
                 type: "doughnut",
                 data: {
                     labels: labels,
                     datasets: [{

                         data: data,
                         //backgroundColor: [gradientStroke_, gradientStroke_2],
                         backgroundColor: [
                             '#71c989',//'#FF6384',
                             '#74abe2',
                             '#FFCE56',
                             '#f08956',
                             '#8c32a8'
                         ],
                         borderWidth: 2,
                         label: "Score"
                     }]
                 },
                 options: {
                     //elements: {
                     //    center: {
                     //        text: "Total:"+ Total,
                     //        color: '#FF6384', // Default is #000000
                     //        fontStyle: 'Arial', // Default is Arial
                     //        sidePadding: 5, // Default is 20 (as a percentage)
                     //        minFontSize: 25, // Default is 20 (in px), set to false and text will not wrap.
                     //        lineHeight: 25 // Default is 25 (in px), used for when text wraps
                     //    }
                     //},
                     elements: {
                         center: {
                             text: textInside
                         }
                     },

                     responsive: true,
                     legend: {
                         display: false,
                         position: 'right',
                         labels: {
                             fontColor: "#000080",
                         }
                     },

                     //title: {
                     //    display: true,
                     //    text: "Assessment"
                     //},
                     centerPercentage: 60,
                     centerArea: {
                         displayText: true,
                         text: "100%"
                     },

                     plugins: {
                         labels: {
                             render: 'value' + "%",
                             fontColor: '#000',
                             position: 'outside'
                         }
                     },
                     tooltips: {
                         callbacks: {
                             label: function (tooltipItem, data) {
                                 var dataset = data.datasets[tooltipItem.datasetIndex];
                                 var total = dataset.data.reduce(function (previousValue, currentValue, currentIndex, array) {
                                     return previousValue + currentValue;
                                 });
                                 //var currentValue = dataset.data[tooltipItem.index];
                                 //var percentage = Math.floor(((currentValue / total) * 100) + 0.5);
                                 //return percentage + "%";

                                 var currentValue = dataset.data[tooltipItem.index];
                                 var percentage = parseFloat((currentValue / total * 100).toFixed(1));
                                 //return currentValue + ' (' + percentage + '%)';
                                 //return percentage + '%';
                                 return currentValue;

                             },
                             title: function (tooltipItem, data) {
                                 return data.labels[tooltipItem[0].index];
                             }
                         }
                     },

                     animation: {
                         duration: 5000
                     }
                 },
                 centerText: {
                     display: true,
                     text: "Total:" + Total
                 }
             };

             window.myRadialGauge = new Chart(ctx, config);
         }
    }
    function render_Validation_Chart(data, labels) {
		//Chart.defaults.global.defaultFontFamily = "Verdana";
        var Total = data[0] + data[1] + data[2] + data[3] + data[4];
        if (Total == 0) {
            var ID = 'chart-Validation';
            Render_No_Data(ID)
        }
        else {
            var ctx = document.getElementById("chart-Validation").getContext("2d");

            var Total = data[0] + data[1] + data[2] + data[3] + data[4];
            var textInside = Total;
            var config = {
                type: "doughnut",
                data: {
                    labels: labels,
                    datasets: [{

                        data: data,
                        //backgroundColor: [gradientStroke_, gradientStroke_2],
                        backgroundColor: [
                            '#71c989',//'#FF6384',
                            '#74abe2',
                            '#FFCE56',
                            '#f08956',
                            '#8c32a8'
                        ],
                        borderWidth: 2,
                        label: "Score"
                    }]
                },
                options: {
                    //elements: {
                    //    center: {
                    //        text: "Total:"+ Total,
                    //        color: '#FF6384', // Default is #000000
                    //        fontStyle: 'Arial', // Default is Arial
                    //        sidePadding: 5, // Default is 20 (as a percentage)
                    //        minFontSize: 25, // Default is 20 (in px), set to false and text will not wrap.
                    //        lineHeight: 25 // Default is 25 (in px), used for when text wraps
                    //    }
                    //},
                    elements: {
                        center: {
                            text: textInside
                        }
                    },

                    responsive: true,
                    legend: {
                        display: false,
                        position: 'right',
                        labels: {
                            fontColor: "#000080",
                        }
                    },

                    //title: {
                    //    display: true,
                    //    text: "Assessment"
                    //},
                    centerPercentage: 60,
                    centerArea: {
                        displayText: true,
                        text: "100%"
                    },

                    plugins: {
                        labels: {
                            render: 'value' + "%",
                            fontColor: '#000',
                            position: 'outside'
                        }
                    },
                    tooltips: {
                        callbacks: {
                            label: function (tooltipItem, data) {
                                var dataset = data.datasets[tooltipItem.datasetIndex];
                                var total = dataset.data.reduce(function (previousValue, currentValue, currentIndex, array) {
                                    return previousValue + currentValue;
                                });
                                //var currentValue = dataset.data[tooltipItem.index];
                                //var percentage = Math.floor(((currentValue / total) * 100) + 0.5);
                                //return percentage + "%";

                                var currentValue = dataset.data[tooltipItem.index];
                                var percentage = parseFloat((currentValue / total * 100).toFixed(1));
                                //return currentValue + ' (' + percentage + '%)';
                                //return percentage + '%';
                                return currentValue;

                            },
                            title: function (tooltipItem, data) {
                                return data.labels[tooltipItem[0].index];
                            }
                        }
                    },

                    animation: {
                        duration: 5000
                    }
                },
                centerText: {
                    display: true,
                    text: "Total:" + Total
                }
            };

            window.myRadialGauge = new Chart(ctx, config);
        }
    }
  //  function renderChartAssessment(data, labels) {

		//var ctx = document.getElementById("").getContext("2d");

		//var config = {
		//	type: "doughnut",
		//	data: {
		//		labels: labels,
		//		datasets: [{
		//			data: data,
		//			backgroundColor: [
		//					'#71c989',
		//					'#74abe2',
		//					'#FFCE56',
		//					'#f08956'
		//				],
		//			borderWidth: 2,
		//			label: "Score"
		//		}]
  //          },

		//	options: {

		//		responsive: true,
  //              legend: {
  //                  display: false,
		//			position: 'right',
  //                  labels: {
  //                      fontColor: "#000080",
  //                  }
		//		},
  //              title: {
  //                  display: true,
  //                  text: "Assessment"
  //              },
  //              centerPercentage: 60,
  //              centerArea: {
  //                  displayText: true,
  //                  text: "100%"
  //              },

  //              plugins: {
  //                  labels: {
  //                      display: true,
  //                      render: 'value',
  //                      position: 'outside',
  //                      arc: true
  //                  }
  //              },

		//		animation: {
		//			duration: 5000
  //              },
  //              tooltips: {
  //                  callbacks: {
  //                      label: function (tooltipItem, data) {
  //                          var dataset = data.datasets[tooltipItem.datasetIndex];
  //                          var total = dataset.data.reduce(function (previousValue, currentValue, currentIndex, array) {
  //                              return previousValue + currentValue;
  //                          });
  //                          //var currentValue = dataset.data[tooltipItem.index];
  //                          //var percentage = Math.floor(((currentValue / total) * 100) + 0.5);
  //                          //return percentage + "%";

  //                           var currentValue = dataset.data[tooltipItem.index];
  //                          var percentage = parseFloat((currentValue/total*100).toFixed(1));
  //                          //return currentValue + ' (' + percentage + '%)';
  //                          return percentage + '%';
  //                      },
  //                      title: function(tooltipItem, data) {
  //                          return data.labels[tooltipItem[0].index];
  //                      }
  //                  }
  //              }

		//	}
		//};

		//window.myRadialGauge = new Chart(ctx, config);
  //  }

    function percentage(Result) {
       
                var Data = Result[0];
                var d_total = (Data.COMPLETE + Data.WIP + Data.ONHOLD + Data.YetToStart)
                if (d_total > 0) {
                    var a = (Data.COMPLETE) / d_total;
                    var percent = Math.ceil(a * 100);
                    $("#AssId").html(percent + "%");
                    $("#AssId_Progress").css('width', percent + '%');
                    var progressid = '#AssId_Progress';
                    if (percent > 0 && percent<50) {
                         $(progressid).css('background-color', blue);
                    }
                    else if (percent > 50 && percent<100) {
                        $(progressid).css('background-color', Yellow);
                    }
                    else if (percent==100) {
                         $(progressid).css('background-color', Green);
                    }
                    var Rs = Data.UploadStatus
                    if (Rs == 1) {
                        $("#Ass_StatusId").html("Completed");
                    }
                    //else if(percent>0){
                    //     $("#Ass_StatusId").html("WIP");
                    //}
                    else {
                         $("#Ass_StatusId").html("Yet To Start");
                    }
                }
                else {
                    $("#AssId").html(0 + "%");
                    $("#AssId_Progress").css('width', 0 + '%');
                    $("#Ass_StatusId").html("Yet To Start");
                    }


        //Pre-Convertion
        var Data1 = Result[1];
        var d1_total = (Data1.COMPLETE + Data1.WIP + Data1.ONHOLD + Data1.YetToStart );
        if (d1_total > 0) {
            var a = (Data1.COMPLETE) / d1_total;
            var percent = Math.ceil(a * 100);
            $("#PreId").html(percent + "%");
            
            $("#PreId_Progress").css('width', percent + '%');
            var progressid = '#PreId_Progress';
            if (percent > 0 && percent < 50) {
                $(progressid).css('background-color', blue);
                $("#Pre_StatusId").html("WIP");
            }
            else if (percent > 50 && percent < 100) {
                $(progressid).css('background-color', Yellow);
                $("#Pre_StatusId").html("WIP");
            }
            else if (percent == 100) {
                $(progressid).css('background-color', Green);
                $("#Pre_StatusId").html("Completed");
            }
            else {
                $("#PreId").html(0 + "%");
            $("#PreId_Progress").css('width', 0 + '%');
            $("#Pre_StatusId").html("Yet To Start");
            }
        }
         else {
            $("#PreId").html(0 + "%");
            $("#PreId_Progress").css('width', 0 + '%');
            $("#Pre_StatusId").html("Yet To Start");
             //$("#PreDivId").removeClass("bg-grow-early");
             //   $("#PreDivId").last().addClass("bg-grow-before");
            }

        //Convertion
        //debugger;
         var Data2 = Result[2];
        var d2_total = (Data2.COMPLETE + Data2.WIP + Data2.ONHOLD + Data2.YetToStart );
        if (d2_total > 0) {
            var a = (Data2.COMPLETE) / d2_total;
            var percent = Math.ceil(a * 100);
            $("#ConId").html(percent + "%");
            $("#ConId_Progress").css('width', percent + '%');
                    var progressid = '#ConId_Progress';
            if (percent > 0 && percent < 50) {
                $(progressid).css('background-color', blue);
                $("#Con_StatusId").html("WIP");
            }
            else if (percent > 50 && percent < 100) {
                $(progressid).css('background-color', Yellow);
                $("#Con_StatusId").html("WIP");
            }
            else if (percent == 100) {
                $(progressid).css('background-color', Green);
                $("#Con_StatusId").html("Completed");
            }
            else {
                $("#ConId").html(0 + "%");
            $("#ConId_Progress").css('width', 0 + '%');
            $("#Con_StatusId").html("Yet To Start");
            }
        }
        else {
            $("#ConId").html(0 + "%");
            $("#ConId_Progress").css('width', 0 + '%');
            $("#Con_StatusId").html("Yet To Start");
             //$("#ConDivId").removeClass("bg-grow-early");
             //   $("#ConDivId").last().addClass("bg-grow-before");
            }

         //Post-Convertion
        var Data3 = Result[3];
        var d3_total = (Data3.COMPLETE + Data3.WIP + Data3.ONHOLD + Data3.YetToStart);
        if (d3_total > 0) {
            var a = (Data3.COMPLETE) / d3_total;
            var percent = Math.ceil(a * 100);
            $("#PostId").html(percent + "%");
            var progressid = '#PostId_Progress';
            $(progressid).css('width', percent + '%');
            if (percent > 0 && percent < 50) {
                $(progressid).css('background-color', blue);
                $("#Post_StatusId").html("WIP");
            }
            else if (percent > 50 && percent < 100) {
                $(progressid).css('background-color', Yellow);
                $("#Post_StatusId").html("WIP");
            }
            else if (percent == 100) {
                $(progressid).css('background-color', Green);
                $("#Post_StatusId").html("Completed");
            }
            else {
                 $("#PostId").html(0 + "%");
            $("#PostId_Progress").css('width', 0 + '%');
            $("#Post_StatusId").html("Yet To Start");
            }
            
        }
        else {
              $("#PostId").html(0 + "%");
            $("#PostId_Progress").css('width', 0 + '%');
            $("#Post_StatusId").html("Yet To Start");
             //$("#PostDivId").removeClass("bg-grow-early");
             //   $("#PostDivId").last().addClass("bg-grow-before");
            }

         //Validation
        var Data4 = Result[4];
        var d4_total = (Data4.COMPLETE + Data4.WIP + Data4.ONHOLD + Data4.YetToStart);
        if (d4_total > 0) {
            var a = (Data4.COMPLETE) / d4_total;
            var percent = Math.ceil(a * 100);
            $("#ValiId").html(percent + "%");
            var progressid = '#ValiId_Progress';
            $(progressid).css('width', percent + '%');
            if (percent > 0 && percent < 50) {
                $(progressid).css('background-color', blue);
                $("#Vali_StatusId").html("WIP");
            }
            else if (percent > 50 && percent < 100) {
                $(progressid).css('background-color', Yellow);
                $("#Vali_StatusId").html("WIP");
            }
            else if (percent == 100) {
                $(progressid).css('background-color', Green);
                $("#Vali_StatusId").html("Completed");
            }
            else {
                 $("#ValiId").html(0 + "%");
            $("#ValiId_Progress").css('width', 0 + '%');
            $("#Vali_StatusId").html("Yet To Start");
            }
            //if (percent == 100) {
            //    $("#Vali_StatusId").html("Completed");
            //     $("#ValiDivId").removeClass("bg-grow-before");
            //    $("#ValiDivId").last().addClass("bg-grow-early");

            //}
            //else {

            //    $("#Vali_StatusId").html("Yet To Start/WIP");
            //    $("#ValiDivId").removeClass("bg-grow-early");
            //    $("#ValiDivId").last().addClass("bg-grow-before");
            //}
        }
        else {
             $("#ValiId").html(0 + "%");
            $("#ValiId_Progress").css('width', 0 + '%');
            $("#Vali_StatusId").html("Yet To Start");
            //$("#ValiDivId").removeClass("bg-grow-early");
            //$("#ValiDivId").last().addClass("bg-grow-before");
                

            }
        
			//	},
			//	error: function () {
			//		//alert("Error while inserting data");
			//	}
			//});
    }

    jQuery(document).ready(function ($) {

        Ajax_Donut();
        //Assessment_percentage();
        
        var In =@ViewBag.Instance;

        if (In == 0) {
            //$("#AssDivId").removeClass("bg-grow-early");
            //$("#AssDivId").last().addClass("bg-grow-before");
            $("#AssId").html("0 %")
            //$('.Home-Bottem').hide();
        }
        else {
            //$("#AssDivId").removeClass("bg-grow-before");
            //$("#AssDivId").last().addClass("bg-grow-early");
            //$('.Home-Bottem').show();
           // $("#AssId").html(percent)
        }

            //$("#IDInstance").prop("disabled", true);
            $('#SubmitInstance').prop("disabled", true);
            $('#IDCustomer').change(function () {
            $("#IDInstance").prop("disabled", false);
            var id = $(this).val();
             var select = $("#IDProject");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: "-Select-"
                    }));
            $.ajax({
                type: "POST",
                url: '@Url.Action("LoadProject","Home")',
                data: { 'CustomerId' : id},
                success: function (data) {
                    var select = $("#IDProject");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: "-Select-"
                    }));
                    $.each(data, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.Value,
                            text: itemData.Text
                        }));
                    });
                    $("#IDProject").prop("disabled", false);
                    $("#IDInstance").prop("disabled", true);
                    $('#SubmitInstance').prop("disabled", true);
                },
                error: function (a) {
                    //debugger;
                    //alert(a);
                }
            });
        });
            $('#IDProject').change(function () {

            var id = $(this).val();
			$('#SubmitInstance').prop("disabled", true);
             var select = $("#IDInstance");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: "-Select-"
                    }));
            $.ajax({
                type: "POST",
                url: '@Url.Action("LoadInstance","Home")',
                data: { 'ProjectId' : id},
                success: function (data) {
                    var select = $("#IDInstance");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: "-Select-"
                    }));
                    if (data.length > 0) {
                        $.each(data, function (index, itemData) {
                            select.append($('<option/>', {
                                value: itemData.Value,
                                text: itemData.Text
                            }));
                        });
                        $("#IDInstance").prop("disabled", false);
                    }
                    else {
                        $("#IDInstance").prop("disabled", true);
						$('#SubmitInstance').prop("disabled", true);
                    }
                },
                error: function (a) {
                    alert(a);
                }
            });
            });
            $('#IDInstance').change(function () {
                var id = $(this).val();
                if (id == ""||id =="0") {
                     $('#SubmitInstance').prop("disabled", true);
                } else {
					$('#SubmitInstance').prop("disabled", false);
                }
            });
        $('#SubmitInstance').click(function () {
            var IDInstance = $("#IDInstance").val();
            $.ajax({
                //url: '<%: Url.Action("Upload")%>?Cust_ID=' + Cust_ID + '&IDProject=' + IDProject+'&InstanceID='+InstanceID,
                url: '@Url.Action("SubmitInstance", "Home")',
                type: "POST",
                data: { 'IDInstance': IDInstance },
                success: function (result) {
                   Notiflix.Notify.Success('New Live Instance updated !', {cssAnimationStyle:'zoom', cssAnimationDuration:500,});
                    setTimeout(Redirect, 3000);
                    
                }
            });

           
        });
    });
    function Redirect() {
        location.reload();
    }
    // Chart.pluginService.register({
    //  beforeDraw: function(chart) {
    //    if (chart.config.options.elements.center) {
    //      // Get ctx from string
    //      var ctx = chart.chart.ctx;

    //      // Get options from the center object in options
    //      var centerConfig = chart.config.options.elements.center;
    //      var fontStyle = centerConfig.fontStyle || 'Arial';
    //      var txt = centerConfig.text;
    //      var color = centerConfig.color || '#000';
    //      var maxFontSize = centerConfig.maxFontSize || 15;
    //      var sidePadding = centerConfig.sidePadding || 20;
    //      var sidePaddingCalculated = (sidePadding / 100) * (chart.innerRadius * 2)
    //      // Start with a base font of 30px
    //      ctx.font = "10px " + fontStyle;

    //      // Get the width of the string and also the width of the element minus 10 to give it 5px side padding
    //      var stringWidth = ctx.measureText(txt).width;
    //      var elementWidth = (chart.innerRadius * 2) - sidePaddingCalculated;

    //      // Find out how much the font can grow in width.
    //      var widthRatio = elementWidth / stringWidth;
    //      var newFontSize = Math.floor(30 * widthRatio);
    //      var elementHeight = (chart.innerRadius * 2);

    //      // Pick a new font size so it will not be larger than the height of label.
    //      var fontSizeToUse = Math.min(newFontSize, elementHeight, maxFontSize);
    //      var minFontSize = centerConfig.minFontSize;
    //      var lineHeight = centerConfig.lineHeight || 25;
    //      var wrapText = false;

    //      if (minFontSize === undefined) {
    //        minFontSize = 50;
    //      }

    //      if (minFontSize && fontSizeToUse < minFontSize) {
    //        fontSizeToUse = minFontSize;
    //        wrapText = true;
    //      }

    //      // Set font settings to draw it correctly.
    //      ctx.textAlign = 'center';
    //      ctx.textBaseline = 'middle';
    //      var centerX = ((chart.chartArea.left + chart.chartArea.right) / 2);
    //      var centerY = ((chart.chartArea.top + chart.chartArea.bottom) / 2);
    //      ctx.font = fontSizeToUse + "px " + fontStyle;
    //      ctx.fillStyle = color;

    //      if (!wrapText) {
    //        ctx.fillText(txt, centerX, centerY);
    //        return;
    //      }

    //      var words = txt.split(' ');
    //      var line = '';
    //      var lines = [];

    //      // Break words up into multiple lines if necessary
    //      for (var n = 0; n < words.length; n++) {
    //        var testLine = line + words[n] + ' ';
    //        var metrics = ctx.measureText(testLine);
    //        var testWidth = metrics.width;
    //        if (testWidth > elementWidth && n > 0) {
    //          lines.push(line);
    //          line = words[n] + ' ';
    //        } else {
    //          line = testLine;
    //        }
    //      }

    //      // Move the center up depending on line height and number of lines
    //      centerY -= (lines.length / 2) * lineHeight;

    //      for (var n = 0; n < lines.length; n++) {
    //        ctx.fillText(lines[n], centerX, centerY);
    //        centerY += lineHeight;
    //      }
    //      //Draw text in center
    //      ctx.fillText(line, centerX, centerY);
    //    }
    //  }
    //});

//    Chart.Chart.pluginService.register({
//        beforeDraw: function (chart) {
//            //debugger;
//        if (chart.config.centerText.display !== null &&
//            typeof chart.config.centerText.display !== 'undefined' &&
//            chart.config.centerText.display) {
//            drawTotals(chart);
//        }
//    },
//    });

//    function drawTotals(chart) {
 
//    var width = chart.chart.width,
//    height = chart.chart.height,
//    ctx = chart.chart.ctx;
 
//    ctx.restore();
//    var fontSize = (height / 114).toFixed(2);
//    ctx.font = fontSize + "em sans-serif";
//    ctx.textBaseline = "middle";
 
//    var text = chart.config.centerText.text,
//    textX = Math.round((width - ctx.measureText(text).width) / 2),
//    textY = height / 2;
 
//    ctx.fillText(text, textX, textY);
//    ctx.save();
//}
</script>
<script type="text/javascript">
    //var randomScalingFactor = function () {
    //    return Math.round(Math.random() * 100);
    //};

    //Chart.defaults.global.defaultFontFamily = "Verdana";

    //var ctx = document.getElementById("chart-Assessment").getContext("2d");
    var ctx1 = document.getElementById("chart-Pre_Conversion").getContext("2d");
    var ctx2 = document.getElementById("chart-Conversion").getContext("2d");
    var ctx3 = document.getElementById("chart-Post_Conversion").getContext("2d");
    var ctx4 = document.getElementById("chart-Validation").getContext("2d");

    //var ctx5 = document.getElementById("chart-Storage").getContext("2d");

    window.onload = function () {
        //var ctx = document.getElementById("chart-Assessment").getContext("2d");
        //window.myRadialGauge = new Chart(ctx, config);
        var ctx1 = document.getElementById("chart-Pre_Conversion").getContext("2d");
        window.myRadialGauge = new Chart(ctx1, config1);

        var ctx2 = document.getElementById("chart-Conversion").getContext("2d");
        window.myRadialGauge = new Chart(ctx2, config2);

        var ctx3 = document.getElementById("chart-Post_Conversion").getContext("2d");
        window.myRadialGauge = new Chart(ctx3, config3);

        var ctx4 = document.getElementById("chart-Validation").getContext("2d");
        window.myRadialGauge = new Chart(ctx4, config4);

        //var ctx5 = document.getElementById("chart-Storage").getContext("2d");
        //window.myRadialGauge = new Chart(ctx5, config5);
    };

    //var gradientStroke_ = ctx.createLinearGradient(500, 0, 100, 0);
    //gradientStroke_.addColorStop(0, "#FDB777");
    //gradientStroke_.addColorStop(1, "#FD9346");

    var gradientStroke_1 = ctx1.createLinearGradient(500, 0, 100, 0);
    gradientStroke_1.addColorStop(0, "#FDB777");
    gradientStroke_1.addColorStop(1, "#FD9346");

    var gradientStroke_2 = ctx2.createLinearGradient(500, 0, 100, 0);
    gradientStroke_2.addColorStop(0, "#FB291B");
    gradientStroke_2.addColorStop(1, "#CD1B2D");


    var gradientStroke_3 = ctx3.createLinearGradient(500, 0, 100, 0);
    gradientStroke_3.addColorStop(0, "#FDB777");
    gradientStroke_3.addColorStop(1, "#FD9346");

    var gradientStroke_4 = ctx4.createLinearGradient(500, 0, 100, 0);
    gradientStroke_4.addColorStop(0, "#FB291B");
    gradientStroke_4.addColorStop(1, "#CD1B2D");

    //var gradientStroke_5 = ctx5.createLinearGradient(500, 0, 100, 0);
    //gradientStroke_5.addColorStop(0, "#FDB777");
    //gradientStroke_5.addColorStop(1, "#FD9346");

    //var config = {
    //    type: "radialGauge",
    //    data: {
    //        labels: ["In Progress"],
    //        datasets: [
    //            {
    //                data: [60],
    //                backgroundColor: [gradientStroke_],
    //                borderWidth: 0,
    //                label: "Score"
    //            }
    //        ]
    //    },
    //    options: {
    //        responsive: true,
    //        legend: {},
    //        title: {
    //            display: false,
    //            text: "Radial gauge chart"
    //        },
    //        centerPercentage: 60,
    //        centerArea: {
    //            displayText: true,
    //            text: "60%"
    //        }
    //    }
    //};

    var config1 = {
        type: "radialGauge",
        data: {
            labels: ["Closed"],
            datasets: [
                {
                    data: [40],
                    backgroundColor: [gradientStroke_1],
                    borderWidth: 0,
                    label: "Score"
                }
            ]
        },
        options: {
            responsive: true,
            legend: {},
            title: {
                display: false,
                text: "Radial gauge chart"
            },
            centerPercentage: 60,
            centerArea: {
                displayText: true,
                text: "40%"
            }
        }
    };
    var config2 = {
        type: "radialGauge",
        data: {
            labels: ["In Progress"],
            datasets: [
                {
                    data: [60],
                    backgroundColor: [gradientStroke_2],
                    borderWidth: 0,
                    label: "Score"
                }
            ]
        },
        options: {
            responsive: true,
            legend: {},
            title: {
                display: false,
                text: "Radial gauge chart"
            },
            centerPercentage: 60,
            centerArea: {
                displayText: true,
                text: "60%"
            }
        }
    };

    var config3 = {
        type: "radialGauge",
        data: {
            labels: ["Closed"],
            datasets: [
                {
                    data: [40],
                    backgroundColor: [gradientStroke_3],
                    borderWidth: 0,
                    label: "Score"
                }
            ]
        },
        options: {
            responsive: true,
            legend: {},
            title: {
                display: false,
                text: "Radial gauge chart"
            },
            centerPercentage: 60,
            centerArea: {
                displayText: true,
                text: "40%"
            }
        }
    };

    var config4 = {
        type: "radialGauge",
        data: {
            labels: ["In Progress"],
            datasets: [
                {
                    data: [60],
                    backgroundColor: [gradientStroke_4],
                    borderWidth: 0,
                    label: "Score"
                }
            ]
        },
        options: {
            responsive: true,
            legend: {},
            title: {
                display: false,
                text: "Radial gauge chart"
            },
            centerPercentage: 60,
            centerArea: {
                displayText: true,
                text: "60%"
            }
        }
    };

    //var config5 = {
    //    type: "radialGauge",
    //    data: {
    //        labels: ["In Progress"],
    //        datasets: [
    //            {
    //                data: [60],
    //                backgroundColor: [gradientStroke_5],
    //                borderWidth: 0,
    //                label: "Score"
    //            }
    //        ]
    //    },
    //    options: {
    //        responsive: true,
    //        legend: {},
    //        title: {
    //            display: false,
    //            text: "Radial gauge chart"
    //        },
    //        centerPercentage: 40,
    //        centerArea: {
    //            displayText: true,
    //            text: "2.05 TB"
    //        }
    //    }
    //};


</script>
<script>
    var $container = $("#scrollContainer"),
    $ps = $container.find("._Scroll"),
    containerHeight = $container.height(),
    contentHeight = 0,
    scrollTop = 0,
    paused = false;

$ps.each(function() {
    contentHeight += $(this).outerHeight();
});

$("<div></div>").css("height", 75).appendTo($container).clone().prependTo($container);

setInterval(function() {
    if (paused)
        return;
    if (scrollTop > contentHeight + containerHeight)
        scrollTop = 0;
    $container.scrollTop(scrollTop++);
        
    $ps.removeClass("highlighted")
       .addClass("dimmed")
       .each(function() {
           var $this = $(this),
               top = $this.position().top,
               height = $this.height();
           if (top > 0 && top + height < containerHeight)
                    $(this).addClass("highlighted");
    });
}, 20);

$container.hover(function() {
    paused = true;
}, function() {
    paused = false;
});

</script>

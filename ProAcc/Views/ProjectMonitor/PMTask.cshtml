
@{
    ViewBag.Title = "PMTask Monitor";
    Layout = "~/Views/shared/_Layout.cshtml";

}
@Styles.Render("~/Content/css/jqGrid")
@Scripts.Render("~/bundles/Scripts/jqGrid")
<style>
    .wrapColumnText {
        white-space: normal !important;
        height: auto;
        vertical-align: text-top;
    }

    .fit_Data {
        width: fit-content;
    }

    .ui-jqgrid .ui-jqgrid-labels th.ui-th-column {
        background-color: orange;
        background-image: none
    }

    #info_dialog {
        margin-left: 150vh;
    }
</style>

<a class="card-title">PMTask Monitor</a>
<script>
    //$.jgrid.defaults.width =1000;
    $.jgrid.defaults.responsive = true;
    $.jgrid.defaults.styleUI = 'Bootstrap4';
    $.jgrid.defaults.iconSet = "Octicons";
</script>
<style>
    .ui-jqgrid {
        font-size: 0.8rem
    }

    th.ui-th-column div {
        white-space: normal !important;
        height: auto !important;
        padding: 2px;
        text-align: center;
    }

    .ui-jqgrid .ui-jqgrid-view input, .ui-jqgrid .ui-jqgrid-view select, .ui-jqgrid .ui-jqgrid-view textarea, .ui-jqgrid .ui-jqgrid-view button {
        font-size: 11px !important;
    }

    .ui-jqgrid .ui-jqgrid-bdiv {
        overflow-y: scroll
    }

    #jqGridPager_center {
        visibility: hidden;
    }

    .fixed-sidebar .app-sidebar {
        height: 100% !important;
    }

    .app-main {
        flex: 1;
        display: flex;
        z-index: 8;
        position: relative;
        min-width: 100% !important;
    }

    .app-theme-white.app-container {
        background: #ffffff;
    }

    .app-container {
        min-height: 100%;
    }

    .ui-jqgrid .ui-jqgrid-labels th.ui-th-column {
        /*background-color: orange;
    background-image: none*/
        /*background: linear-gradient(to bottom, #33ccff 0%, #ff99cc 100%);*/
    }
</style>
<hr />

<div class="row instanceRow" style="padding: 1em;">
    <div class="col-lg-12 card">
        <div class="row">
            <div class="col-md-4">
                <label class="">Project Name</label>

                @Html.DropDownList("Project", (IEnumerable<SelectListItem>)ViewBag.Project, "-Select-", new { id = "IDProject", @class = "form-control" })
            </div>
            <div class="col-md-2">
                <label for="exampleEmail" class="">.</label>
                <button class="btn-wide mb-2 mr-2 btn btn-primary form-control" id="Submit">
                    Submit
                </button>
            </div>
        </div>
    </div>
    
</div>
<div>
    <table id="jqGrid"></table>
    <div id="jqGridPager"></div>
</div>
<div style="margin-top:20px">
    @*<table id="jqGrid"></table>
        <div id="jqGridPager"></div>*@
    @*@{
        Html.RenderAction("Monitor", "ProjectMonitor");
    }*@
</div>

<script>
    $('#Submit').click(function () {
        var IDProject = $("#IDProject").val();
        LoadTable(IDProject);
        $('#jqGrid').trigger('reloadGrid');
        Notiflix.Notify.Success('updated !', { cssAnimationStyle: 'zoom', cssAnimationDuration: 500, });
        @*$.ajax({
            //url: '<%: Url.Action("Upload")%>?Cust_ID=' + Cust_ID + '&IDProject=' + IDProject+'&InstanceID='+InstanceID,
            url: '@Url.Action("PMTaskGetData", "ProjectMonitor")',
            type: "POST",
            data: { 'IDProject': IDProject },
            success: function (result) {
                Notiflix.Notify.Success('updated !', { cssAnimationStyle: 'zoom', cssAnimationDuration: 500, });
                LoadTable(IDProject);
                 $('#jqGrid').trigger('reloadGrid');
            }
        });*@
   });


</script>
<script>
    function LoadTable(IDProject) {
        $.jgrid.styleUI.Bootstrap.base.rowTable = "table table-bordered";

        var Planed_StartDate = function (element, options) {
            var ID = options.rowId;
            $(element).on('keypress', function (e) {
                e.preventDefault();
            })
            $(element).datepicker({
                duration: "slow",
                // defaultDate: +1,
                //altFormat: "mm/dd/yy",
                dateFormat: "dd/mm/yy",
                autoSize: false,
                changeYear: true,
                changeMonth: true,
                showButtonPanel: false,
                showWeek: false,
                showButtonPanel: true,
                onClose: function (selectedDate) {
                    $("#" + ID + "_Planed__En_Date").datepicker("option", "minDate", selectedDate);
                    //$("#" + ID + "_Actual_St_Date").datepicker("option", "minDate", selectedDate);
                    //$("#" + ID + "_Actual_En_Date").datepicker("option", "minDate", selectedDate);
                },
            });//.datepicker("setDate", new Date());
             //}).datepicker();
        };
        var Planed_EndDate = function (element, options) {
           var ID = options.rowId;
            //var ST_Date=$('#').val();
            $(element).on('keypress', function (e) {
                e.preventDefault();
            })
            $(element).datepicker({
                duration: "slow",
                // defaultDate: +1,
                //altFormat: "mm/dd/yy",
                dateFormat: "dd/mm/yy",
                autoSize: false,
                changeYear: true,
                changeMonth: true,
                showButtonPanel: false,
                showWeek: false,
                showButtonPanel: true,
                onClose: function (selectedDate) {
                    $("#" + ID + "_Planed__St_Date").datepicker("option", "maxDate", selectedDate);
                    //$("#" + ID + "_Actual_St_Date").datepicker("option", "maxDate", selectedDate);
                    //$("#" + ID + "_Actual_En_Date").datepicker("option", "maxDate", selectedDate);
                }
            });//.datepicker("setDate", new Date());
            // }).datepicker();
        };


        var Actual_St_Date = function (element, options) {
            var ID = options.rowId;
            $(element).on('keypress', function (e) {
                e.preventDefault();
            })
            //var selectedDate = $("#" + ID + "_Planed__St_Date").val();
            //debugger;
            //$("#" + ID + "_Actual_St_Date").datepicker("option" "minDate", new Date());
            //var d=$("#jqGrid").jqGrid('getGridParam', 'selrow');
            var Date = $('#jqGrid').jqGrid('getCell', ID, 'Planed__St_Date');
            //debugger;
            $(element).datepicker({
                duration: "slow",
                // defaultDate: +1,
                //altFormat: "mm/dd/yy",
                dateFormat: "dd/mm/yy",
                autoSize: false,
                changeYear: true,
                changeMonth: true,
                showButtonPanel: false,
                showWeek: false,
                showButtonPanel: true,
                minDate: Date,
                onClose: function (selectedDate) {
                    $("#" + ID + "_Actual_En_Date").datepicker("option", "minDate", selectedDate);
                    //$("#" + ID + "_Planed__En_Date").datepicker("option", "maxDate", selectedDate);
                },
            });//.datepicker("setDate", new Date());
            // }).datepicker();
        };
        var Actual_En_Date = function (element, options) {
           var ID = options.rowId;
            //var ST_Date=$('#').val();
            $(element).on('keypress', function (e) {
                e.preventDefault();
            })
            $(element).datepicker({
                duration: "slow",
                // defaultDate: +1,
                //altFormat: "mm/dd/yy",
                dateFormat: "dd/mm/yy",
                autoSize: false,
                changeYear: true,
                changeMonth: true,
                showButtonPanel: false,
                showWeek: false,
                showButtonPanel: true,
                onClose: function (selectedDate) {
                    $("#" + ID + "_Actual_St_Date").datepicker("option", "maxDate", selectedDate);
                    //$("#" + ID + "Planed_EndDate").datepicker("option", "maxDate", selectedDate);

                }
            });//.datepicker("setDate", new Date());
            // }).datepicker();
        };

        $("#jqGrid").jqGrid({
            url: "@Url.Action("PMTaskGetData", "ProjectMonitor")?IDProject=" + IDProject,
            //editurl: "@Url.Action("SubmitPMTaskMonitor","ProjectMonitor")",
            datatype: "json",
            colModel: [
                 {
                    label: 'Id', name: 'Id', index: 'Id', width: 70,
                    align: 'center', editable: true, hidden: true,
                },
                {
                    label: 'PMTask', name: 'PMTaskID', index: 'PMTaskID', width: 100, editable: false, classes: 'wrapColumnText',
                    cellEdit: true, edittype: 'select', formatter: 'select',
                   editoptions: {
                        value: GetTaskName()
                    }
                },
                {
                    label: 'Project', name: 'ProjectId', index: 'ProjectId', width: 100, editable: false, classes: 'wrapColumnText',
                    cellEdit: true, edittype: 'select', formatter: 'select',
                    editoptions: {
                        value: GetProject()
                    }
                },
                {
                    label: 'Task Other Env. (Y/N)',
                    name: 'Task_Other_Environment', width: 55, editable: true,hidden: true ,
                    edittype: 'checkbox', editoptions: { value: "True:False" }, formatter: "checkbox",

                },
                {
                    label: 'Dependency (Y/N)',
                    name: 'Dependency', width: 72,editable: true,hidden: true,
                    edittype: 'checkbox', editoptions: { value: "True:False" }, formatter: "checkbox",
                },
                { label: 'Pending With ', name: 'Pending', width: 100,  editable: true ,hidden: true},
                {
                    label: 'Delay', name: 'Delay_occurred', width: 30,  editable: true, align: 'center',
                    edittype: 'checkbox',
                    editoptions: { value: "True:False" }
                    , formatter: "checkbox",
                },
                //{
                //    label: 'Owner', name: 'UserID', index: 'UserID', width: 75, align: 'center', editable: false,
                //    cellEdit: true, edittype: 'select', formatter: 'select',
                //    editoptions: {
                //        value: GetUserDropDown()
                //    }
                //},
                {
                    label: 'Status', name: 'StatusId', index: 'StatusId', width: 100,  align: 'center', editable: true,
                    cellEdit: true, edittype: 'select', formatter: 'select',
                    editoptions: {
                        value: GetStatusDropDown()
                    },
                },
                {
                    label: 'Est.(hrs)', name: 'EST_hours', width: 55,
                    editable: true,
                    editrules: { },
                    editoptions: {
                        dataInit: function (element) {
                            $(element).keyup(function(event) {

                                this.value = this.value
                                  .replace(/[^\d:]/g, '')             // numbers and decimals only
                                  .replace(/(^[\d]{2})[\d]/g, '$1')   // not more than 2 digits at the beginning
                                  .replace(/(\::*)\:/g, '$1')         // decimal can't exist more than once
                                  //.replace(/(\:[\d]{2})./g, '$1');    // not more than 4 digits after decimal
                                   .replace(/(\:[0-5][0-9]{1})./g, '$1');

                            });

                        }
                    }
                },
                {
                    label: 'Actual (hrs)', name: 'Actual_St_hours',
                    width: 55, editable: true,
                    editoptions: {
                         dataInit: function (element) {
                            $(element).keyup(function (event) {

                                this.value = this.value
                                  .replace(/[^\d:]/g, '')             // numbers and decimals only
                                  .replace(/(^[\d]{2})[\d]/g, '$1')   // not more than 2 digits at th\e beginning
                                  .replace(/(\::*)\:/g, '$1')         // decimal can't exist more than once
                                  //.replace(/(\:[\d]{2})./g, '$1')    // not more than 4 digits after decimal
                                  .replace(/(\:[0-5][0-9]{1})./g, '$1');
                                //.replace(/(^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9]))./g, '$1');


                            });

                        }

                    }
                },
                {
                    label: 'Planned Start Date', name: 'Planed__St_Date',
                    width: 80, align: "center",  formatter: "date", formatoptions: { altFormat: "dd-mm-yy", newformat: "d/m/Y" }, editable: true,
                    editoptions: { dataInit: Planed_StartDate, classes: 'DateClass' }
                },
                {
                    label: 'Actual Start Date', name: 'Actual_St_Date',
                    width: 75, align: "center",  formatter: "date", formatoptions: { altFormat: "dd-mm-yy", newformat: "d/m/Y" }, editable: true,
                    editoptions: { dataInit: Actual_St_Date, classes: 'DateClass' }

                },
                {
                    label: 'Planned End Date', name: 'Planed__En_Date',
                    width: 75, align: "center", formatter: "date", formatoptions: { altFormat: "dd-mm-yy", newformat: "d/m/Y" }, editable: true,
                    
                    editoptions: { dataInit: Planed_EndDate, classes: 'DateClass' }
                },
                {
                    label: 'Actual End Date', name: 'Actual_En_Date',
                    width: 75, align: "center", formatter: "date", formatoptions: { altFormat: "dd-mm-yy", newformat: "d/m/Y" }, editable: true,
                    
                    editoptions: { dataInit: Actual_En_Date, classes: 'DateClass' }
                },
                {
                    label: 'Comments', name: 'Notes', edittype: "textarea",classes: 'wrapColumnText',
                    wrap: "on"
                    ,editrules: { "edithidden": true, required:true }, "editable": true, "width": 100,
                    editoptions: {
                        "class": "", "rows": 5, "wrap": "off", "style": "width:200px",
                    },
                },
                //{
                //    label: 'ValidationStatus', name: 'ValidationStatus', width: 10, editable: false,hidden: true,

                //    editoptions: { value: "True:False" }

                //},
                {
                    name: "",
                    label: "Actions",
                    width: 65,
                    align: "center",
                    formatter: "actions",
                    formatoptions: {
                        keys: true,
                        delbutton: false,

                        onEdit: function (rowid) {
                            $("#" + rowid + "_StatusId").addClass("fit_Data");
                             //Show_PMEdit();
                        },

                        editformbutton: false,//Determines if popup should open or not
                        afterSave: function (rowid, response, postdata, options) {
                           // Show_HideEdit();
                            $('#jqGrid').trigger( 'reloadGrid' );
                        },
                        afterRestore: function (rowid) {
                             $('#jqGrid').trigger( 'reloadGrid' );
                        },

                        processing:true
                    }

                }

            ],
            loadonce: false,
            altRows: true,
            //rownumbers : true,
            //multiselect : true,
            width: 2000,
            colMenu: false,
            menubar: false,
            viewrecords: true,
            hoverrows: true,
            height: 400,
            rowNum: 1000,
            caption: '',
            sortable: false,
            grouping: false,
            rownumbers: true,
            reload: true,
            reloadAfterSubmit:true,
            pager: "#jqGridPager",
            sortname: 'SequenceNum',
            sortorder: 'asc',
            onSelectRow: editRow,

            serializeRowData: function (postdata) {
                var ColValue = $("#jqGrid").jqGrid('getGridParam', 'selrow');
                //var EST_hours = $("#jqGrid").jqGrid('getCell', ColValue, 'EST_hours');
                //var Actual_St_hours=$("#jqGrid").jqGrid('getCell', ColValue, 'Actual_St_hours');
                //var Planed__St_Date = $("#jqGrid").jqGrid('getCell', ColValue, 'Planed__St_Date');
                //var Planed__En_Date = $("#jqGrid").jqGrid('getCell', ColValue, 'Planed__En_Date');
                //var Actual_St_Date = $("#jqGrid").jqGrid('getCell', ColValue, 'Actual_St_Date');
                //var Actual_En_Date = $("#jqGrid").jqGrid ('getCell', ColValue, 'Actual_En_Date');
                //filterResult = JSON.stringify(newResult);
                var Id = postdata.Id;
                var Task_Other_Environment = postdata.Task_Other_Environment;
                var Dependency = postdata.Dependency;
                var Pending = postdata.Pending;
                var Delay_occurred = postdata.Delay_occurred;
                var StatusId = postdata.StatusId;
                var Notes = postdata.Notes;
                //var EST_hours = EST_hours;
                //var Planed__St_Date = Planed__St_Date;
                //var Planed__En_Date = Planed__En_Date;
                var EST_hours = postdata.EST_hours;
                var Actual_St_hours = postdata.Actual_St_hours;
                var Planed__St_Date = postdata.Planed__St_Date;
                var Planed__En_Date = postdata.Planed__En_Date;
                var Actual_St_Date = postdata.Actual_St_Date;
                var Actual_En_Date = postdata.Actual_En_Date;

                EST_hours = EST_hours.replace(":", ".");
                Actual_St_hours = Actual_St_hours.replace(":", ".");

                //if (Notes == "") {
                //    alert("HI");

                //}
                 @*var UserType ="@Session["UserType"].ToString()"
                if (UserType == 'Project Manager') {
                    EST_hours = postdata.EST_hours;
                    EST_hours = EST_hours.replace(":", ".");
                    Actual_St_hours = Actual_St_hours;
                     Actual_St_hours = Actual_St_hours.replace(":", ".");
                    Planed__St_Date = postdata.Planed__St_Date;
                    Planed__En_Date = postdata.Planed__En_Date;
                     Actual_St_Date = Actual_St_Date;
                    Actual_En_Date = Actual_En_Date;
                }
                else {
                    EST_hours = EST_hours;
                    EST_hours = EST_hours.replace(":", ".");
                     Actual_St_hours = postdata.Actual_St_hours;
                     Actual_St_hours = Actual_St_hours.replace(":", ".");
                     Planed__St_Date = Planed__St_Date;
                    Planed__En_Date = Planed__En_Date;
                    Actual_St_Date = postdata.Actual_St_Date;
                    Actual_En_Date = postdata.Actual_En_Date;
                }*@

                var Message;
                //if (StatusId == 1 ||StatusId == 3 ) {
                //    Message = 'Are you sure..? <br><strong>Once you confirm. You won\'t be able to make any change..!</strong>';
                //}
                //else {
                Message = 'Do you Want to Save the Task?';
                //}
                Notiflix.Confirm.Show('ProAcc Info. Confirm..!',
                    Message, 'Yes', 'No',
                    function () {
                        $.ajax({
                                            type: "POST",
                                            url: '@Url.Action("SubmitPMTaskMonitor", "ProjectMonitor")',
                                            data: {
                                                'Id': "" + Id + "",
                                                'StatusId': StatusId,
                                                'Task_Other_Environment': Task_Other_Environment,
                                                'Dependency': Dependency,
                                                'Pending': Pending,
                                                'Delay_occurred': Delay_occurred,
                                                'EST_hours': EST_hours,
                                                'Actual_St_hours': Actual_St_hours,

                                                'Planed__St_Date': Planed__St_Date,
                                                'Planed__En_Date': Planed__En_Date,

                                                'Actual_St_Date': Actual_St_Date,
                                                'Actual_En_Date': Actual_En_Date,
                                                'Notes': Notes
                                            },
                            success: function (Result) {
                                                 $('#jqGrid').trigger('reloadGrid');

                                            }

                                        });
                        // Yes button callbackalert('Thank you.');
                    }, function () {
                        //$('#jqGrid').trigger( 'reloadGrid' );
                        // No button callbackalert('If you say so...');
                    });
            },
            afterrestorefunc: function (response) {
                //alert("afterrestorefunc");
            }



            // set table stripped class in table style in bootsrap
        });

        function editRow(id) {
            //$('#jqGrid').jqGrid('setColProp', 'actions', { editable: false });
            // var Status_Id = $('#jqGrid').jqGrid('getCell', id, 'StatusId')
            //debugger;
            var UserType = "@Session["UserType"].ToString()"
            if (UserType == 'Customer' || UserType == 'Consultant') {
                //$("#" + id + "_StatusId option[value='3']").prop('disabled', 'disabled');
                //$("#" + id + "_StatusId option[value='4']").prop('disabled', 'disabled');
                //$("#" + id + "_StatusId option[value='5']").prop('disabled', 'disabled');

                $("#" + id + "_StatusId option[value='3']").hide();
                $("#" + id + "_StatusId option[value='4']").hide();
                $("#" + id + "_StatusId option[value='5']").hide();
            }
            else if (UserType == 'Project Manager') {
                //$("#" + id + "_StatusId option[value='1']").prop('disabled', 'disabled');
                //$("#" + id + "_StatusId option[value='5']").prop('disabled', 'disabled');

                $("#" + id + "_StatusId option[value='1']").hide();
                $("#" + id + "_StatusId option[value='2']").hide();
                //$("#" + id + "_StatusId option[value='5']").hide();
            }

            //var ids = jQuery("#jqGrid").jqGrid('getDataIDs');
            //var WIP_Status = false;
            //for (var i = 0; i < ids.length; i++) {
            //    var Status_Id = $('#jqGrid').jqGrid('getCell', ids[i], 'StatusId')
            //    if (Status_Id == 2) {
            //        WIP_Status = true;
            //    }
            //}
            //if (WIP_Status) {
            //    $("#" + id + "_StatusId option[value='2']").hide();
            //} else {
            //    $("#" + id + "_StatusId option[value='2']").show();
            //}
        }

            //var ids = jQuery("#jqGrid").jqGrid('getDataIDs');

            //            function textReadOnly(cellValue, options, rowdata, action) {
            //    if (rowdata.stateId == 4) {
            //        return "<input value='"+ rowdata.stateId +"' readonly='true'></input>";
            //    } else {
            //        return "<input value='"+ rowdata.stateId +"'></input>";
            //    }
            //}
            //if (UserType == 'Project Manager')
            //{
            //    //var WIP_Status=false;
            //    for (var i = 0; i < ids.length; i++) {
            //        //var Actions = $('#jqGrid').jqGrid('getCell', ids[i], 'Actions')

            //        $('#jEditButton_' + ids[i]).attr(readonly='true');
            //       // $('#jEditButton_' + ids[i]).prop('readonly', 'readonly');
            //        //$('#jEditButton_' + ids[i]).prop('disabled', 'disabled');

            //         //$('#jEditButton_' + ids[i]).hide();
            //        //$(this).attr("readonly", false);
            //        //jEditButton_3
            //    }
            //}
            //alert(id);

        $('#jqGrid').navGrid('#jqGridPager',
            // the buttons to appear on the toolbar of the grid
            { edit: false, add: false, del: false, search: false, refresh: true, view: false, position: "left", cloneToTop: false },
            // options for the Edit Dialog
            {
                editCaption: "The Edit Dialog",
                recreateForm: true,
                checkOnUpdate: true,
                checkOnSubmit: true,
                closeAfterEdit: true,
                reloadAfterSubmit:true,
                  //editParams: myEditOptions,
                beforeShowForm: function (form) {



                },
                errorTextFormat: function (data) {
                    alert("in" + data.responseText);
                    return 'Error: ' + data.responseText
                }
            },
            // options for the Add Dialog
            {
                closeAfterAdd: true,
                recreateForm: true,
                beforeShowForm: function (form) {

                    //var nameColumnField = $('#tr_Task', form).show();
                    //$('#tr_Task', form).show();

                    //$('<tr class="FormData" id="tr_AddInfo"><td class="CaptionTD ui-widget-content"><b>Additional Information:</b></td></tr>').insertAfter (nameColumnField);
                    // debugger;
                    $('#PhaseId')
                        .val(5)//AssumentID
                        .prop("disabled", true);
                    $("#tr_Task_Other_Environment").hide();
                    $("#tr_Dependency").hide();
                    $("#tr_Pending").hide();
                    $("#tr_Delay_occurred").hide();
                    $("#tr_StatusID").hide();
                    $("#tr_EST_hours").hide();
                    $("#tr_Actual_St_hours").hide();
                    $("#tr_Planed__St_Date").hide();
                    $("#tr_Actual_St_Date").hide();
                    $("#tr_Planed__En_Date").hide();
                    $("#tr_Actual_En_Date").hide();
                    $("#tr_Notes").hide();
                    // $grid.jqGrid('showCol', 'Id');
                    //$grid.jqGrid(‘hideCol’, 'Task_Other_Environment');
                    // debugger;
                    //alert("Mano");
                },

                errorTextFormat: function (data) {
                    return 'Error: ' + data.responseText
                }
            },
            // options for the Delete Dailog
            {
                errorTextFormat: function (data) {
                    return 'Error: ' + data.responseText
                }
            },
            {
                multipleSearch: true,
                showQuery: false
            } // search options - define multiple search
        );



    }

    function GetTaskName()
    {
        var Parameters = {};
    $.ajax({
        type: "POST",
       url: '@Url.Action("GetTaskName", "ProjectMonitor")',
        //data: '{Phase: ' + JSON.stringify(Phase) + ',condition:' + JSON.stringify(condition) + '}',
        dataType: "json",
		async: false,
        contentType: "application/json; charset=utf-8",
        success: function (Data) {
				for (var i = 0; i < Data.length; i++) {
                var obj = {};
                    var Name = Data[i].PMTaskName;
                    var key = "" + Data[i].PMTaskId;
                Parameters[key] = Name;
            }
        },
        error: function (data) {
            alert("GetAllUser fail");
        }
    });
	return Parameters;
    }

    function GetProject()
    {
        var Parameters = {};
    $.ajax({
        type: "POST",
       url: '@Url.Action("GetProject", "ProjectMonitor")',
        //data: '{Phase: ' + JSON.stringify(Phase) + ',condition:' + JSON.stringify(condition) + '}',
        dataType: "json",
		async: false,
        contentType: "application/json; charset=utf-8",
        success: function (Data) {
				for (var i = 0; i < Data.length; i++) {
                var obj = {};
                    var Name = Data[i].Project_Name;
                    var key = "" + Data[i].Project_Id;
                Parameters[key] = Name;
            }
        },
        error: function (data) {
            alert("GetAllUser fail");
        }
    });
	return Parameters;
    }

    function GetStatusDropDown() {
        var Parameters = {};
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetStatus","ProjectMonitor")',
            //data: '{Phase: ' + JSON.stringify(Phase) + ',condition:' + JSON.stringify(condition) + '}',
            dataType: "json",
            async: false,
            contentType: "application/json; charset=utf-8",
            success: function (Data) {
                for (var i = 0; i < Data.length; i++) {
                    //var obj = {};
                    var StatusName = Data[i].StatusName;
                    var key = "" + Data[i].Id;
                    Parameters[key] = StatusName;
                }
            },
            error: function (data) {
                alert("GetStatus fail");
            }
        });
        return Parameters;
    }
</script>


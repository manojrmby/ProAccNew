
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/shared/_Layout.cshtml";
}
<script src="~/Asset/Jquery/jqGrid/grid.locale-en.js"></script>
<script src="~/Asset/Jquery/jqGrid/jquery.jqGrid.min.js"></script>
<link href="~/Asset/Jquery/jqGrid/css/octicons.css" rel="stylesheet" />
<link href="~/Asset/Jquery/jqGrid/css/ui.jqgrid-bootstrap4.css" rel="stylesheet" />
<script>
		//$.jgrid.defaults.width =1000;
		$.jgrid.defaults.responsive = true;
		$.jgrid.defaults.styleUI = 'Bootstrap4';
		$.jgrid.defaults.iconSet = "Octicons";
</script>
<style>
    .ui-jqgrid {
        font-size: 0.8rem
    }
	th.ui-th-column div {
    white-space: normal !important;
    height: auto !important;
    padding: 2px;
}
    .ui-jqgrid .ui-jqgrid-view input, .ui-jqgrid .ui-jqgrid-view select, .ui-jqgrid .ui-jqgrid-view textarea, .ui-jqgrid .ui-jqgrid-view button {
    font-size: 11px!important;
}
</style>
<a class="card-title">Create</a>
<div style="margin-left:20px;margin-top:20px">
    <table id="jqGrid"></table>
    <div id="jqGridPager"></div>
</div>
<script type="text/javascript">

		$(document).ready(function () {
			// altrows are set with table striped class for Boostrap
			//$.jgrid.styleUI.Bootstrap.base.rowTable = "table table-bordered table-striped";
			var lastSelection;
			var editParameters = {
				keys: true,
				//successfunc: editSuccessful,
				errorfunc: false,
				restoreAfterError: false,
				extraparam: {
					valor: 'texto', any: '20164',
					clave1: function () {
						var sel_id = $("#grid").jqGrid('getGridParam', 'selrow');
						var value = $("#grid").jqGrid('getCell', sel_id, 'pas1');
						return value;
					},
					obra: function () {
						var sel_id = $("#grid").jqGrid('getGridParam', 'selrow');
						var value = $("#grid").jqGrid('getCell', sel_id, 'obra');
						return value;
					},
					empresa: function () {
						var sel_id = $("#grid").jqGrid('getGridParam', 'selrow');
						var value = $("#grid").jqGrid('getCell', sel_id, 'empresa');
						return value;
					}
				}
			};
			var grid = $("#grid");
			var cancelEditing = function (myGrid) {
				var lrid;
				if (typeof lastSelection !== "undefined") {
					// cancel editing of the previous selected row if it was in editing state.
					// jqGrid hold intern savedRow array inside of jqGrid object,
					// so it is safe to call restoreRow method with any id parameter
					// if jqGrid not in editing state
					myGrid.jqGrid('restoreRow', lastSelection);


					// now we need to restore the icons in the formatter:"actions"
					lrid = $.jgrid.jqID(lastSelection);
					$("tr#" + lrid + " div.ui-inline-edit, " + "tr#" + lrid + " div.ui-inline-del").show();
					$("tr#" + lrid + " div.ui-inline-save, " + "tr#" + lrid + " div.ui-inline-cancel").hide();
					$("div.ui-inline-close").show();
				}
			};

			var getColumnIndexByName = function (grid, columnName) {
				var cm = grid.jqGrid('getGridParam', 'colModel'), i, l = cm.length;
				for (i = 0; i < l; i++) {
					if (cm[i].name === columnName) {
						return i; // return the index
					}
				}
				return -1;
            }
            var DateInput = function (element, options) {
                $(element).on('keypress', function (e) {
                    //if (e.which === 8 && $.inArray(e.target.tagName, inputTags) === -1)
                    e.preventDefault();
                })
                $(element).datepicker({
                    dateFormat: "dd/mm/yy",
                    autoSize: true,
                    changeYear: true,
                    changeMonth: true,
                    showButtonPanel: false,
                    showWeek: false
                });
            };


            var initDateEdit = function (elem, options) {
                // we need get the value before changing the type
                var orgValue = $(elem).val(),
                    cm = $(this).jqGrid("getColProp", options.name);

                $(elem).attr("type", "date");
                if ((Modernizr && !Modernizr.inputtypes.date) || $(elem).prop("type") !== "date") {
                    // if type="date" is not supported call jQuery UI datepicker
                    $(elem).datepicker({
                        dateFormat: "dd/mm/yy",
                        autoSize: true,
                        changeYear: true,
                        changeMonth: true,
                        showButtonPanel: true,
                        showWeek: true
                    });
                } else {
                    // convert date to ISO
                    $(elem).val($.jgrid.parseDate.call(this, cm.formatoptions.newformat, orgValue, "Y-m-d"));
                }
            };


			$("#jqGrid").jqGrid({
				url: "@Url.Action("GetData","ProjectMonitor")",
				datatype: "json",
				editurl:"@Url.Action("SubmitProjectMonitor","ProjectMonitor")",
				colModel: [
                    { label: 'ID', name: 'LocalID', width: 25, editable: false },
					{ label: 'Instance', name: 'Instance', width: 25, editable: false },
                    {
                        label: 'Phase', name: 'PhaseId', index: 'PhaseId', width: 70,
                        sortable: true, align: 'center', 
                        cellEdit: true, edittype: 'select', formatter: 'select',
                        editoptions: {
                            value:
                                GetPhaseDropDown()
                        }
                    },
					
                    { label: 'Activity / Task ', name: 'Task', width: 80, sorttype: 'integer', editable: false },
                    {
                        label: 'Task needed for other environment (Y/N)',
                        name: 'Task_Other_Environment', width: 50, editable: true,
                        edittype: 'checkbox', editoptions: { value: "True:False" }, formatter: "checkbox",
                        
                    },
                    {
                        label: 'Dependency (Y/N)',
                        name: 'Dependency', width: 80, sorttype: 'integer', editable: true,
                        edittype: 'checkbox', editoptions: { value: "True:False" }, formatter: "checkbox",
                    },
                    //{ label: 'PendingId', name: 'PendingId', width: 80, sorttype: 'integer', editable: false },

                    {
                        label: 'Pending With', name: 'PendingId', index: 'PendingId', width: 70,
                        sortable: true, align: 'center', editable: true,
                        cellEdit: true, edittype: 'select', formatter: 'select',
                        editoptions: {
                            value:
                                GetPendingDropDown()
                        }
                    },
                    //{ label: 'PendingId', name: 'Task', width: 80, sorttype: 'integer', editable: false },
                    {
                        label: 'Delay Occurred (Y/N)', name: 'Delay_occurred', width: 80, sorttype: 'integer', editable: true,
                        edittype: 'checkbox', editoptions: { value: "True:False" }, formatter: "checkbox",
                    },
					// sorttype is used only if the data is loaded locally or loadonce is set to true
				//	{ label: 'Title', name: 'Title', width: 80, sorttype: 'number', editable: false },
					{label: 'Team', name : 'TeamID',index :'TeamID',width:70,sortable:true,align:'center',editable:true,
											cellEdit:true,edittype: 'select',formatter: 'select',
											//editoptions: {
											//    value: "FE:FedEx;TN:TNT;DH:DHL",
											//    defaultValue: "DH"
											//}
                        editoptions: {
                            value:
                                GetTeamDropDown()
                            // getAllSelectOptions()
                        }
                    },
					{label: 'Named Owner of Task', name : 'ConsultantID',index :'ConsultantID',width:70,sortable:true,align:'center',editable:true,
											cellEdit:true,edittype: 'select',formatter: 'select',
											//editoptions: {
											//    value: "FE:FedEx;TN:TNT;DH:DHL",
											//    defaultValue: "DH"
											//}
                        editoptions: {
                            value:
                                GetConsultantDropDown()
                            // getAllSelectOptions()
                        }
                    },
					{label: 'Status', name : 'StatusID',index :'ConsultantID',width:70,sortable:true,align:'center',editable:true,
											cellEdit:true,edittype: 'select',formatter: 'select',
											//editoptions: {
											//    value: "FE:FedEx;TN:TNT;DH:DHL",
											//    defaultValue: "DH"
											//}
                        editoptions: {
                            value:
                                GetStatusDropDown()
                            // getAllSelectOptions()
                        }
                    },
                    {
                        label: 'Est. Duration (hours)', name: 'EST_hours', formatter: "number",edittype:"text", width: 80, editable: true,
                        editoptions: {
                            size: 15, maxlengh: 4,
                            dataInit: function (element) {
                                $(element).keypress(function (e) {
                                    //alert(e);
                                    if (e.which==46) {

                                    }
                                    else if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                                        return false;
                                    }
                                });
                            }
                        }
                    },
                    { label: 'Actual Duration (hours)', name: 'Actual_St_hours',formatter: "number", width: 80, editable: true },
                    {
                        label: 'Planned Start Date', name: 'Planed__St_Date',
                        width: 120, align: "center", sorttype: "date",formatter: "date", formatoptions: { newformat: "d/m/Y"}, editable: true,
                      editoptions: { dataInit: DateInput } 
                    },
                    {
                        label: 'Actual Start Date/Time (UTC)', name: 'Actual_St_Date',
                         width: 120, align: "center", sorttype: "date",formatter: "date", formatoptions: { newformat: "d/m/Y"}, editable: true,
                       editoptions: { dataInit: DateInput } 
                        
                    },
                    {
                        label: 'Planned End Date', name: 'Planed__En_Date',
                         width: 120, align: "center", sorttype: "date",formatter: "date", formatoptions: { newformat: "d/m/Y"}, editable: true,
                       editoptions: { dataInit: DateInput } 
                    },
                    {
                        label: 'Actual End Date/Time (UTC)', name: 'Actual_En_Date',
                        width: 120, align: "center", sorttype: "date", formatter: "date", formatoptions: { newformat: "d/m/Y" }, editable: true,
                         editoptions: { dataInit: DateInput } 
                    },
                    {
                        label: 'Notes/Remarks', name: 'Notes', edittype: "textarea",
                        wrap: "on"
                       //formatter: function (v) {
                       //     return '<div style="max-height:20px">' $.jgrid.htmlEncode(v) '</div>';
                       // }
                        , editoptions: {
                            "class": "", "rows": 5, "wrap": "off", "style": "width:200px"
                            //"readonly": "readonly"
                        },
                        editrules: { "edithidden": true }, "editable": true, "width": 200,
                        //classes: "jqgrid-readonlycolumn"
                    },
					{
						name: "",
						label: "Actions",
						width: 25,
						align: "center",
						formatter: "actions",
						formatoptions: {
                            keys: true,
                            delbutton: false,
                            editformbutton: false,//Determines if popup should open or not
                            afterSave: function (rowid, response, postdata, options) {
                                alert("success");
                            }
                        }

					}
					
				],
				loadonce: true,
				altRows: true,
				//rownumbers : true,
				//multiselect : true,
                width:2000,
                colMenu: true,
                menubar: true,
				viewrecords: false,
				hoverrows: true,
				height:'auto',
				rowNum: 10,
				caption: 'Project Monitor',
				sortable: true,
                grouping: false,
				pager: "#jqGridPager",
                loadComplete: function () {
                }
				// set table stripped class in table style in bootsrap
            });
            
			$('#jqGrid').navGrid('#jqGridPager',
			    // the buttons to appear on the toolbar of the grid
			    { edit: false, add: false, del: false, search: true, refresh: false, view: false, position: "left", cloneToTop: false },
			    // options for the Edit Dialog
			    {
			        editCaption: "The Edit Dialog",
			        recreateForm: true,
			        checkOnUpdate: true,
			        checkOnSubmit: true,
			        closeAfterEdit: true,
			        errorTextFormat: function (data) {
			            alert("in"+data.responseText);
			            return 'Error: ' + data.responseText
			        }
			    },
			    // options for the Add Dialog
			    {
			        closeAfterAdd: true,
			        recreateForm: true,
			        errorTextFormat: function (data) {
			            return 'Error: ' + data.responseText
			        }
			    },
			    // options for the Delete Dailog
			    {
			        errorTextFormat: function (data) {
			            return 'Error: ' + data.responseText
			        }
			    },
			    {
			        multipleSearch: true,
			        showQuery: false
			    } // search options - define multiple search
            );
            function GetPhaseDropDown() {
				 var Parameters = {};
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetPhase","ProjectMonitor")',
                    //data: '{Phase: ' + JSON.stringify(Phase) + ',condition:' + JSON.stringify(condition) + '}',
                    dataType: "json",
					async: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (Data) {
						 for (var i = 0; i < Data.length; i++) {
                           var obj = {};
                             var PhaseName = Data[i].PhaseName;
                            var key = ""+Data[i].Id;
                            Parameters[key] = PhaseName;
                        }
                    },
                    error: function (data) {
                        alert("fail");
                    }
                });
				return Parameters;
            }

            function GetPendingDropDown() {
				 var Parameters = {};
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetPending","ProjectMonitor")',
                    //data: '{Phase: ' + JSON.stringify(Phase) + ',condition:' + JSON.stringify(condition) + '}',
                    dataType: "json",
					async: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (Data) {
						 for (var i = 0; i < Data.length; i++) {
                           var obj = {};
                             var PendingName = Data[i].PendingName;
                            var key = ""+Data[i].Id;
                            Parameters[key] = PendingName;
                        }
                    },
                    error: function (data) {
                        alert("fail");
                    }
                });
				return Parameters;

            }
			function GetTeamDropDown() {
				 var Parameters = {};
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetTeam","ProjectMonitor")',
                    //data: '{Phase: ' + JSON.stringify(Phase) + ',condition:' + JSON.stringify(condition) + '}',
                    dataType: "json",
					async: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (Data) {
						 for (var i = 0; i < Data.length; i++) {
                           var obj = {};
                             var TeamName = Data[i].TeamName;
                            var key = ""+Data[i].Id;
                            Parameters[key] = TeamName;
                        }
                    },
                    error: function (data) {
                        alert("fail");
                    }
                });
				return Parameters;

            }
            function GetConsultantDropDown() {
				var Parameters = {};
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetConsultant","ProjectMonitor")',
                    //data: '{Phase: ' + JSON.stringify(Phase) + ',condition:' + JSON.stringify(condition) + '}',
                    dataType: "json",
					async: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (Data) {
						 for (var i = 0; i < Data.length; i++) {
                           var obj = {};
                             var Name = Data[i].Name;
                            var key = ""+Data[i].Id;
                            Parameters[key] = Name;
                        }
                    },
                    error: function (data) {
                        alert("fail");
                    }
                });
				return Parameters;
            }
            function GetStatusDropDown() {
                var Parameters = {};
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetStatus","ProjectMonitor")',
                    //data: '{Phase: ' + JSON.stringify(Phase) + ',condition:' + JSON.stringify(condition) + '}',
                    dataType: "json",
                    async: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (Data) {
                        for (var i = 0; i < Data.length; i++) {
                            var obj = {};
                            var StatusName = Data[i].StatusName;
                            var key = "" + Data[i].Id;
                            Parameters[key] = StatusName;
                        }
                    },
                    error: function (data) {
                        alert("fail");
                    }
                });
                return Parameters;
            }
            function GetYesNo() {
				var Status = {
					'true': 'Yes', 'false': 'False'
				};

				return Status;

			}
            @*function GetDropDown() {

                var Parameters = {};
                var Result
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetPhase","ProjectMonitor")',
                    //data: '{Phase: ' + JSON.stringify(Phase) + ',condition:' + JSON.stringify(condition) + '}',
                    dataType: "json",
					async: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (Data) {
						 for (var i = 0; i < Data.length; i++) {
                           var obj = {};
                            var GivenName = Data[i].GivenName;
                            var key = ""+Data[i].ID;
                            Parameters[key] = GivenName;
                        }
                    }
                });
				return Parameters;
            }*@
		});

</script>